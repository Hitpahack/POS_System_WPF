<UserControl x:Class="FalcaPOS.Invoice.Views.PurchaseReturnsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:FalcaPOS.Common.Converters;assembly=FalcaPOS.Common"
             xmlns:local="clr-namespace:FalcaPOS.Invoice.Views"
             mc:Ignorable="d" 
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:behavior="clr-namespace:FalcaPOS.Common.Behaviors;assembly=FalcaPOS.Common"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:prism="http://prismlibrary.com/"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="IconMargin" TargetType="materialDesign:PackIcon">
            <Setter Property="Margin" Value="0,20,0,0" />
        </Style>
        <Style x:Key="GridViewToggleButtonColumnStyle"
			   TargetType="telerik:GridViewCell" BasedOn="{StaticResource GridViewCellStyle}">
            <Setter Property="Padding"
					Value="0,0,0,0" />
        </Style>
        <converters:ArrayToVisibilityConverter x:Key="ArrayToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="55"/>
            <RowDefinition Height="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}}"/>
        </Grid.RowDefinitions>
        
        <TextBlock Grid.Row="0" Margin="0 5 0 0" VerticalAlignment="Center" Grid.Column="0" Visibility="Collapsed" Text="{Binding RowCount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBlock>
        <StackPanel Margin="0 10 0 0"  Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" >

            <ComboBox  Margin="0 0 20 0" AutomationProperties.AutomationId="cmbPurchaseAndReturnCreditNoteViewSupplierNameId" ItemsSource="{Binding Suppliers}"  VerticalAlignment="Center" SelectedItem="{Binding SelectedSupplier,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="180" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="SupplierName">
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding DataContext.SupplierSelectionChangeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:PurchaseReturnsView}}}" CommandParameter="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{Binding Name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox Margin="0 0 20 0" Width="180" 
                      ItemsSource="{Binding Stores}" 
                      Visibility="{Binding StoreVisibility,Converter={StaticResource BooleanToVisibilityConverter}}"  
                      VerticalAlignment="Center" 
                       AutomationProperties.AutomationId="cmbPurchaseAndReturnCreditNoteViewStoreNameId"
                      SelectedItem="{Binding SelectedStore,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                      materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="StoreName">
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding DataContext.SupplierSelectionChangeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:PurchaseReturnsView}}}" CommandParameter="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{Binding Name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox Margin="20 0 0 0" 
                              Height="45" 
                              Width="200" 
                              ItemsSource="{Binding ReturnStatus}"
                              SelectedItem="{Binding SelectedStatus}"
                              materialDesign:HintAssist.IsFloating="True"
                              AutomationProperties.AutomationId="cmbPurchaseAndReturnCreditNoteViewSalesReturnStatusId"
                              materialDesign:HintAssist.Hint="Select Return Status">

                </ComboBox>
            
           
            <!--<CheckBox Margin="0 0 20 0"  Style="{StaticResource MaterialDesignFilterChipPrimaryOutlineCheckBox}" IsChecked="{Binding Path=IsPreCNChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"       Content="Return Requested" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding StatusCommand}" CommandParameter="Pre-C/N" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding StatusUncheckCommand}" CommandParameter="Pre-C/N" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
            <CheckBox Margin="0 0 20 0"  Style="{StaticResource MaterialDesignFilterChipPrimaryOutlineCheckBox}"    IsChecked="{Binding Path=IsapproveChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"    Content="Return Approved" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding StatusCommand}"  CommandParameter="Pre-C/N-Approved" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding StatusUncheckCommand}" CommandParameter="Pre-C/N-Approved" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
            <CheckBox Margin="0 0 20 0"  Style="{StaticResource MaterialDesignFilterChipPrimaryOutlineCheckBox}"    IsChecked="{Binding Path=IspostcnChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"    Content="C/N Received" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding StatusCommand}" CommandParameter="Post-C/N" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding StatusUncheckCommand}" CommandParameter="Post-C/N" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
            <CheckBox Margin="0 0 20 0"  Style="{StaticResource MaterialDesignFilterChipPrimaryOutlineCheckBox}"    IsChecked="{Binding Path=IsCreatedChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"    Content="C/N Approved" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding StatusCommand}" CommandParameter="Created" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding StatusUncheckCommand}" CommandParameter="Created"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
            <CheckBox Margin="0 0 20 0"  Style="{StaticResource MaterialDesignFilterChipPrimaryOutlineCheckBox}"    IsChecked="{Binding Path=IsSendBackChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"    Content="SendBack" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding StatusCommand}"  CommandParameter="SendBack" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding StatusUncheckCommand}" CommandParameter="SendBack" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
            <CheckBox Margin="0 0 10 0"  Style="{StaticResource MaterialDesignFilterChipPrimaryOutlineCheckBox}"   IsChecked="{Binding Path=IsPartiallyAdjusted,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"    Content="Partially Adjusted">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding StatusCommand}"  CommandParameter="{Binding Content, RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType={x:Type CheckBox}}}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding StatusUncheckCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType={x:Type CheckBox}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
            
            <CheckBox Margin="0 0 10 0"  Style="{StaticResource MaterialDesignFilterChipPrimaryOutlineCheckBox}"   IsChecked="{Binding Path=IsadjustedChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"    Content="Adjusted">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding StatusCommand}"  CommandParameter="{Binding Content, RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType={x:Type CheckBox}}}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding StatusUncheckCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType={x:Type CheckBox}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>-->
            
        </StackPanel>
        <StackPanel  Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
            <Button Height="45" Width="45"  
                    Style="{DynamicResource RoundButton}" 
                    AutomationProperties.AutomationId="btnPurchaseAndReturnCreditNoteViewRefreshId"
                    Command="{Binding RefreshCommand}" CommandParameter="{Binding}">
                <Button.Content>
                    <materialDesign:PackIcon Kind="Refresh"/>
                </Button.Content>
            </Button>
            <Button Margin="10 0 0 0" HorizontalAlignment="Right" 
                            Content="Search" Style="{DynamicResource RoundTextButton}"
                            Command="{Binding PurchaseReturnSearchCommand}"
                             AutomationProperties.AutomationId="btnPurchaseAndReturnCreditNoteViewSearchId"
                            CommandParameter="{Binding}"></Button>
        </StackPanel>

        <telerik:RadGridView  x:Name="dreditNoteViewRadGridView" Grid.Row="1" Grid.ColumnSpan="2"  IsReadOnly="True" Margin="0 10 0 200"
        AutoGenerateColumns="False" CanUserReorderColumns="False" RowDetailsVisibilityMode="VisibleWhenSelected" ShowGroupPanel="true" 
                              IsFilteringAllowed="true" ShowColumnFooters="True"
                ScrollViewer.CanContentScroll="True" Style="{StaticResource RadGridViewStyle}"
               RowIndicatorVisibility="Collapsed"  Visibility="{Binding ReturnViews, Converter={StaticResource ArrayToVisibilityConverter}}"             
               ItemsSource="{Binding ReturnViews,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
            <telerik:RadGridView.Columns>
                <telerik:GridViewToggleRowDetailsColumn CellStyle="{StaticResource GridViewToggleButtonColumnStyle}" />
                <telerik:GridViewDataColumn Width="*" IsFilterable="True"  Header="C/N Number" DataMemberBinding="{Binding  CreditNoteNumber}">
                    <telerik:GridViewDataColumn.AggregateFunctions>
                        <telerik:CountFunction ResultFormatString="Total Records: {0}" />
                    </telerik:GridViewDataColumn.AggregateFunctions>
                </telerik:GridViewDataColumn>
                <telerik:GridViewDataColumn Width="*" IsFilterable="True" Header="C/N Date" DataMemberBinding="{Binding  CreditNoteDate}"></telerik:GridViewDataColumn>
                <telerik:GridViewDataColumn Width="*" IsFilterable="True" Header="Status" DataMemberBinding="{Binding  Status}"></telerik:GridViewDataColumn>
                <telerik:GridViewDataColumn Width="*" IsFilterable="True" Header="Total" DataMemberBinding="{Binding  Total}"></telerik:GridViewDataColumn>
                <telerik:GridViewDataColumn Width="*" IsFilterable="True" Header="Supplier" DataMemberBinding="{Binding  SupplierName}"></telerik:GridViewDataColumn>
                <telerik:GridViewDataColumn Width="*" IsFilterable="True" Header="Store" DataMemberBinding="{Binding  StoreName}"></telerik:GridViewDataColumn>
                <telerik:GridViewDataColumn Width="*" IsFilterable="True" Header="Created DateTime" DataMemberBinding="{Binding  CreatedDatetime}"></telerik:GridViewDataColumn>
                <telerik:GridViewDataColumn Width="*" IsFilterable="True" Header="Remark" DataMemberBinding="{Binding  Remark}"></telerik:GridViewDataColumn>
                <telerik:GridViewDataColumn>
                    <telerik:GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Grid.Column="8" Orientation="Horizontal" Visibility="{Binding FileID,Converter={StaticResource NotZeroToVisibilityConverter}}">
                                <Button Margin="20 0 0 0"  Style="{StaticResource MaterialDesignIconButton}"   HorizontalAlignment="Right"  ToolTip="Download Attachment" Height="35" Width="50" CommandParameter="{Binding FileID}"  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:PurchaseReturnsView}}, Path=DataContext.DownloadAttachCommand}">
                                    <Button.Content>
                                        <materialDesign:PackIcon Kind="Download" />
                                    </Button.Content>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </telerik:GridViewColumn.CellTemplate>
                </telerik:GridViewDataColumn>
            </telerik:RadGridView.Columns>
            <telerik:RadGridView.RowDetailsTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="100"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <telerik:RadGridView  Grid.Row="0"
                            AutoGenerateColumns="False" RowIndicatorVisibility="Collapsed" 
                            ShowGroupPanel="False"  CanUserReorderColumns="False" 
                            ScrollViewer.CanContentScroll="false" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"
                            ItemsSource="{Binding PurhcaseReturnProduct,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <telerik:RadGridView.Columns>
                                <telerik:GridViewDataColumn IsFilterable="True" DataMemberBinding="{Binding InvoiceNo}" Header="Invoice Number"/>
                                <telerik:GridViewDataColumn IsFilterable="True" DataMemberBinding="{Binding InvoiceDate}" Header="Invoice Date"/>
                                <telerik:GridViewDataColumn IsFilterable="True" DataMemberBinding="{Binding ProductName}" Header="Product Name"/>
                                <telerik:GridViewDataColumn IsFilterable="True" DataMemberBinding="{Binding ManufactureName}" Header="Brand Name"/>
                                <telerik:GridViewDataColumn IsFilterable="True" DataMemberBinding="{Binding ProductSKU}" Header="SKU"/>
                                <telerik:GridViewDataColumn IsFilterable="True" DataMemberBinding="{Binding ProductRate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Header="Rate"/>
                                <telerik:GridViewDataColumn IsFilterable="True" DataMemberBinding="{Binding ProductSellingPrice}" Header="Selling Price"/>
                                <telerik:GridViewDataColumn IsFilterable="True" DataMemberBinding="{Binding ProductGST}" Header="Product GST"/>
                                <telerik:GridViewDataColumn IsFilterable="True" DataMemberBinding="{Binding ProductSellingPrice}" Header="Selling Price"/>
                                <telerik:GridViewDataColumn IsFilterable="True" DataMemberBinding="{Binding ProductTotal,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Header="Product Total"/>
                                <telerik:GridViewDataColumn IsFilterable="True" DataMemberBinding="{Binding Lotnumber}" Header="Lot Number"/>
                                <telerik:GridViewColumn Header="ReturnQty">
                                    <telerik:GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox IsEnabled="{Binding IsReadOnly,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Text="{Binding ReturnQty,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                                                <i:Interaction.Behaviors>
                                                    <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                                                </i:Interaction.Behaviors>
                                            </TextBox>
                                        </DataTemplate>
                                    </telerik:GridViewColumn.CellTemplate>
                                </telerik:GridViewColumn>
                            </telerik:RadGridView.Columns>
                        </telerik:RadGridView>

                        <StackPanel  Visibility="{Binding AdjustModels,Converter={StaticResource notNullToVisibleConverter}}"  Margin="15 10 0 0" Grid.Row="1" Orientation="Vertical" HorizontalAlignment="Left">
                            <TextBlock Text="REDEEMED CREDITNOTE DETAILS" FontSize="12" FontWeight="Bold"></TextBlock>
                            <ItemsControl  HorizontalAlignment="Center"  ItemsSource="{Binding  AdjustModels,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="5*"></ColumnDefinition>
                                                <ColumnDefinition Width="1*"></ColumnDefinition>
                                                <ColumnDefinition Width="5*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <materialDesign:Chip Margin="0 5 5 5"  
                                                 Content="{Binding PoNumber,Mode=TwoWay}" ToolTip="PoNumber"></materialDesign:Chip>
                                            <TextBlock Grid.Column="1" Margin="0 5 5 5" FontSize="14" VerticalAlignment="Center" Text=":"></TextBlock>
                                            <StackPanel Grid.Column="2" Orientation="Horizontal">
                                                <materialDesign:PackIcon
                                Margin="0 0 0 0"
                                Kind="Rupee" VerticalAlignment="Center"
                                Style="{StaticResource IconMargin}" />
                                                <TextBlock  Margin="0 5 5 5"   Foreground="{DynamicResource MahApps.Brushes.Accent}" ToolTip="Credit Amount" FontSize="14" VerticalAlignment="Center" Text="{Binding Amount,Mode=TwoWay}"></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button  Style="{StaticResource RoundTextButton}" Width="120" Margin="0 0 20 0"  Visibility="{Binding IsEnablePostApproveBtn,Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding DataContext.PostApproveCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PurchaseReturnsView}}}" CommandParameter="{Binding}">Approve</Button>
                            <Button  Style="{StaticResource RoundTextButton}" Width="120" Margin="0 0 200 0"  Visibility="{Binding IsEnablePostApproveBtn,Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding DataContext.SendBackCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PurchaseReturnsView}}}" CommandParameter="{Binding}">SendBack</Button>
                            <Button Style="{StaticResource RoundTextButton}" Width="120" Margin="0 0 20 0"  Visibility="{Binding IsEnableApproveEditBtn,Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PurchaseReturnsView}}}" CommandParameter="{Binding}">Edit</Button>
                            <Button Style="{StaticResource RoundTextButton}" Width="120" Margin="0 0 20 0" Visibility="{Binding IsEnableApproveSaveBtn,Converter={StaticResource BooleanToVisibilityConverter}}"  Command="{Binding DataContext.SaveCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PurchaseReturnsView}}}" CommandParameter="{Binding}">Save</Button>
                            <Button Style="{StaticResource RoundTextButton}" Width="120" Margin="0 0 200 0" Visibility="{Binding IsEnableApproveEditBtn,Converter={StaticResource BooleanToVisibilityConverter}}"  Command="{Binding DataContext.ApproveCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PurchaseReturnsView}}}" CommandParameter="{Binding}">Approve</Button>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </telerik:RadGridView.RowDetailsTemplate>
        </telerik:RadGridView>
    </Grid>
</UserControl>
