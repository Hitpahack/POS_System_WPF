<UserControl
    x:Class="FalcaPOS.Indent.Views.IndentProductCard"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behavior="clr-namespace:FalcaPOS.Common.Behaviors;assembly=FalcaPOS.Common"
    xmlns:converters="clr-namespace:FalcaPOS.Common.Converters;assembly=FalcaPOS.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:FalcaPOS.Indent.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:FalcaConverter="clr-namespace:FalcaPOS.Common.Converters;assembly=FalcaPOS.Common"
    xmlns:prism="http://prismlibrary.com/"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:Name="uxproductCard"
    Margin="0 20 0 0 "
    DataContext="{Binding}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ColorAnimation
            x:Key="HasError"
            AutoReverse="True"
            Storyboard.TargetProperty="BorderBrush.Color"
            From="Transparent"
            To="Red"
            Duration="0:0:0.200" />
        <!--<DoubleAnimation
            x:Key="StopSearchAnimation"
            Storyboard.TargetProperty="Opacity"
            To="0"
            Duration="0:0:4" />-->
        <FalcaConverter:IndentStockCountConverter x:Key="IndentStockCountConverter"></FalcaConverter:IndentStockCountConverter>
    </UserControl.Resources>
    <Border
        x:Name="ProductCardBorder"
        Background="Transparent"
        BorderBrush="Transparent"
        BorderThickness="1"
        CornerRadius="4">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.3*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="0.7*" />
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="1.2*" />
                <ColumnDefinition />

            </Grid.ColumnDefinitions>
            <Label Margin="0 10 0 0" Grid.Column="0" Grid.Row="0" Content="{Binding SlNo}"></Label>
            <ComboBox HorizontalAlignment="Left"
                        Grid.Row="0" Grid.Column="1"
                Margin="0 0 0 0"
                        Width="280"
                        Height="40"
                        Name="cmbProductSearchList"
                        materialDesign:HintAssist.Hint="Search product"
                         materialDesign:HintAssist.IsFloating="True"
                        IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        IsEditable="True"                        
                        IsTextSearchEnabled="True"
                        ItemsSource="{Binding ProductsSearchList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        SelectedValue="{Binding SelectedProductSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource MaterialDesignComboBox}"
                        ToolTip="{Binding SelectedProductSearch.ProductName}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{Binding ProductName}" />
                                    <Label Content="{Binding ProductSKU}" ContentStringFormat="(SKU {0})" />
                                    <Label Content="{Binding Brand}" ContentStringFormat="({0})" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <prism:InvokeCommandAction CommandParameter="{Binding Path=StoreId, ElementName=uxproductCard}" Command="{Binding SearchProductSelectionChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <TextBox Text="{Binding ElementName=cmbProductSearchList, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <prism:InvokeCommandAction Command="{Binding SearchTextChangedCommand}" CommandParameter="{Binding ElementName=cmbProductSearchList, Path=Text}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
             
         
            
            <TextBox
                 Margin="10 0 0 0"
                Width="200"
                Grid.Row="0"
                Grid.Column="2"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Brand"
                materialDesign:HintAssist.IsFloating="True"
                IsReadOnly="True"
                  IsEnabled="False"
                Style="{StaticResource MaterialDesignTextBox}"
                Text="{Binding SelectedProduct.Manufacturer.Name}" />
            <TextBox
                Width="220"
                Grid.Row="0"
                Grid.Column="3"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Sub Category"
                 materialDesign:HintAssist.IsFloating="True"
                IsReadOnly="True"
                  IsEnabled="False"
                Style="{StaticResource MaterialDesignTextBox}"
                Text="{Binding SelectedProduct.ProductType.Name}" />

            
            <TextBox  Width="80"
                Grid.Row="0"
                Grid.Column="4"
               HorizontalAlignment="Left"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Unit Type"
                 materialDesign:HintAssist.IsFloating="True"
                IsReadOnly="True"
                  IsEnabled="False"
                Style="{StaticResource MaterialDesignTextBox}"
                Text="{Binding SelectedProduct.SubUnitType}"></TextBox>
            <TextBox   Margin="5 0 0 0"
                Width="60"
                Grid.Row="0"
                Grid.Column="5"
                MaxLength="4"   
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Quantity"
                 materialDesign:HintAssist.IsFloating="True"
                Style="{StaticResource MaterialDesignTextBox}"
                Text="{Binding Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Behaviors>
                    <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                </i:Interaction.Behaviors>
            </TextBox>
            <TextBlock Margin="10 12 0 0"  VerticalAlignment="Center" Grid.Row="0" 
                Grid.Column="6" >
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="FontSize" Value="13"></Setter>
                        <Style.Triggers>
                            
                            <DataTrigger Binding="{Binding Path=SelectedProduct.ProductStockCount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Value="0">
                                <Setter Property="Foreground" Value="Red"></Setter>
                                <Setter Property="Text" Value="No Stock"></Setter>
                                
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=SelectedProduct.ProductStockCount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IndentStockCountConverter}}" Value="true">
                                <Setter Property="Foreground" Value="Green"></Setter>
                                <Setter Property="Text" Value="{Binding SelectedProduct.ProductStockCount,StringFormat='{}( {0} Stock Available )' }"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                        
                    </Style>
                   
                </TextBlock.Style>
            </TextBlock>
            <StackPanel 
                Grid.Row="0"
                Grid.Column="7"
                Margin="10,10,0,0">
                <StackPanel Orientation="Horizontal">
                    <Button
                        Width="30"
                        Height="30"
                        Margin="0,0,10,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="btnAddInvAddIndentProductCardsId"
                        Command="{Binding AddIndentProductCardCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        Style="{DynamicResource ActionButton}"
                        ToolTip="Add Product">
                        <materialDesign:PackIcon Kind="Plus" />
                    </Button>
                    <Button Margin="5 0 0 0 "
                        Width="30"
                        Height="30"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="btnAddInvAddIndentProductCardsId"
                        Background="Transparent"
                        Command="{Binding RemoveIndentProductCardCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding Path=IndentProductGUIDId}"
                        Style="{StaticResource RoundButton}"
                        ToolTip="Remove Product">
                        <materialDesign:PackIcon
                            Background="Transparent"
                            Foreground="red"
                            Kind="Trash" />
                    </Button>
                </StackPanel>
            </StackPanel>
          
        </Grid>

        <Border.Style>
            <Style>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=HasError}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard x:Name="hasErrorTrue">
                                <Storyboard>
                                    <ColorAnimation
                                        AutoReverse="True"
                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                        From="Transparent"
                                        To="Red"
                                        Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <RemoveStoryboard BeginStoryboardName="hasErrorTrue" />
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                    <!--<DataTrigger Binding="{Binding Path=HasError}" Value="False">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard x:Name="hasErrorFalse">
                                <Storyboard>
                                    <ColorAnimation
                                        AutoReverse="True"
                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                        From="Transparent"
                                        To="Red"
                                        Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <RemoveStoryboard BeginStoryboardName="hasErrorFalse" />
                        </DataTrigger.ExitActions>
                    </DataTrigger>-->
                    <EventTrigger RoutedEvent="Border.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                    From="-100"
                                    To="0"
                                    Duration="0:0:1">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude="0.8" EasingMode="EaseInOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>



                </Style.Triggers>
            </Style>
        </Border.Style>

    </Border>
</UserControl>
