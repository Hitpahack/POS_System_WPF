<UserControl x:Class="FalcaPOS.Assert.View.AddAssertsPopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FalcaPOS.Assert.View"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"  
              xmlns:behavior="clr-namespace:FalcaPOS.Common.Behaviors;assembly=FalcaPOS.Common"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="IconMargin" TargetType="materialDesign:PackIcon">
        
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Badged.Background}"></Setter>
        </Style>
    </UserControl.Resources>
    <StackPanel Width="470" Background="White" Orientation="Vertical" AutomationProperties.AutomationId="ticasedepositapprovepopupid">
       
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="9*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Grid.ColumnSpan="2" Height="60px" Background="{DynamicResource MahApps.Brushes.Accent}" Orientation="Horizontal">
                <Image Margin="10 5 0 0" Width="45px" Height="36px" HorizontalAlignment="Left" Source="{DynamicResource logo}"></Image>
                <TextBlock Margin="20 5 0 0" Foreground="White" VerticalAlignment="Center" Style="{DynamicResource PoppinsMedium}" FontSize="15px" Text="">Add Assets</TextBlock>
                <Button AutomationProperties.AutomationId="btnAssetsExitId" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="0" Margin="240 0 0 0" x:Name="btnclose" Command="materialDesign:DialogHost.CloseDialogCommand" Style="{StaticResource MaterialDesignFlatButton}"  ToolTip="Close" Foreground="White" Content="X" FontSize="20" >
                </Button>
            </StackPanel>
            <Grid Grid.Row="1" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="100"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="0">
                    <materialDesign:PackIcon Margin="0 20 5 0" Kind="Barcode"  Style="{StaticResource IconMargin}"></materialDesign:PackIcon>
                    <ComboBox Height="40" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Asset Code" ItemsSource="{Binding AssertCode}" DisplayMemberPath="Name"  SelectedValue="{Binding SelectedAssertCode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="150">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding DataContext.SelectCgeAssertcodeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AddAssertsPopup}}}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <ContentControl ToolTip="Add Asset Code" Margin="10 0 0 0" prism:RegionManager.RegionName="AddAssertCode"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="1">
                    <materialDesign:PackIcon Margin="0 20 5 0" Kind="Class"  Style="{StaticResource IconMargin}"></materialDesign:PackIcon>
                    <ComboBox Height="40" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Asset Class" Width="150"
                          ItemsSource="{Binding AssertClass}"
                          DisplayMemberPath="Name"
                          SelectedValue="{Binding SelectedAssertClass,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding DataContext.SelectCgeAssertclassCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AddAssertsPopup}}}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <ContentControl ToolTip="Add Asset Class" Margin="10 0 0 0" prism:RegionManager.RegionName="AddAssertClass"/>
                </StackPanel>
                <StackPanel Grid.Row="2" HorizontalAlignment="Center" Orientation="Horizontal">
                    <materialDesign:PackIcon Margin="0 20 5 0" Kind="Manufacturing"  Style="{StaticResource IconMargin}"></materialDesign:PackIcon>
                    <ComboBox Height="40" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Asset Type"  Width="150"
                           ItemsSource="{Binding AssertType}"
                      DisplayMemberPath="Name"
                      SelectedValue="{Binding SelectedAssertType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding DataContext.SelectCgeAssertTypeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AddAssertsPopup}}}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <ContentControl ToolTip="Add Asset Type" Margin="10 0 0 0" prism:RegionManager.RegionName="AddAssertType"/>
                </StackPanel>
                <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center">
                    <materialDesign:PackIcon Margin="0 20 5 0" Kind="Category"  Style="{StaticResource IconMargin}"></materialDesign:PackIcon>
                    <ComboBox Height="40" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Asset Category"  Width="150"
                          ItemsSource="{Binding AssertCategory}"
                          DisplayMemberPath="Name"
                          SelectedValue="{Binding SelectedAssertCategory,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">

                    </ComboBox>
                    <ContentControl ToolTip="Add Asset Category" Margin="10 0 0 0" prism:RegionManager.RegionName="AddAssertCategory"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0 0 10 0"  Grid.Row="4" HorizontalAlignment="Center">
                    <materialDesign:PackIcon Margin="0 20 5 0" Kind="Store"  Style="{StaticResource IconMargin}"></materialDesign:PackIcon>
                    <ComboBox Height="40" Margin="0 0 20 0" materialDesign:HintAssist.IsFloating="True" 
                      materialDesign:HintAssist.Hint="Select Store"  
                      Width="150"
                      ItemsSource="{Binding Stores}"
                      DisplayMemberPath="Name"
                      SelectedValue="{Binding SelectedStores,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></ComboBox>


                </StackPanel>

                <StackPanel Grid.Row="5" Orientation="Horizontal" Margin="10" HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Margin="0 20 5 0" Kind="WebAsset"  Style="{StaticResource IconMargin}"></materialDesign:PackIcon>
                        <TextBox  materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Good Stock" Width="80"
                          Text="{Binding GoodStock,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                            </i:Interaction.Behaviors>
                        </TextBox>

                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Margin="0 20 5 0" Kind="BrokenImage"  Style="{StaticResource IconMargin}"></materialDesign:PackIcon>
                        <TextBox Margin="10 0 0 0" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Damage Stock" Width="80"
                         Text="{Binding DamageStock,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                            </i:Interaction.Behaviors>
                        </TextBox>

                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Margin="0 20 5 0" Kind="Counter"  Style="{StaticResource IconMargin}"></materialDesign:PackIcon>
                        <TextBox Margin="10 0 0 0" IsEnabled="False" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Total Stock" Width="80"
                         Text="{Binding TotalStock,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </StackPanel>

                </StackPanel>
                <TextBox   Width="150" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Damage Reason" Grid.Row="6"
                     Text="{Binding Reason,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
                <TextBox Width="150" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Remarks" Grid.Row="7"
                     Text="{Binding Remarks,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="0 10 0 0"></TextBox>
                <StackPanel Orientation="Horizontal"  Grid.Row="8" HorizontalAlignment="Center">
                    <Button Width="120" Height="40"  Style="{StaticResource RoundTextButton}" Command="{Binding AddAssertCommand}" CommandParameter="{Binding ElementName=btnclose}">Add</Button>
                    <Button Grid.Column="1" Margin="30 0 0 0" 
                    Style="{StaticResource RoundButton}"
                    AutomationProperties.AutomationId="btnAssetsRefreshId" 
                    HorizontalAlignment="Right"  
                    ToolTip="Reset" Height="38" Width="38"  
                    Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:AddAssertsPopup}}, Path=DataContext.RefreshAssertpopCommand}"  
                    CommandParameter="{Binding}">
                        <Button.Content>
                            <materialDesign:PackIcon Kind="Refresh"/>
                        </Button.Content>
                    </Button>
                </StackPanel>

            </Grid>
            <Image Grid.Column="1" StretchDirection="Both" Height="500" VerticalAlignment="Bottom" Grid.RowSpan="2" Margin="15 10 0 0" Source="{DynamicResource greenshadow_addcustomer}">
            </Image>

        </Grid>
    </StackPanel>
</UserControl>
