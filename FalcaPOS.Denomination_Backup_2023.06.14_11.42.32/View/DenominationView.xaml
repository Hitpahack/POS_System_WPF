<UserControl x:Class="FalcaPOS.Denomination.View.DenominationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FalcaPOS.Denomination.View"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
            xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
            xmlns:behavior="clr-namespace:FalcaPOS.Common.Behaviors;assembly=FalcaPOS.Common"
            xmlns:converter="clr-namespace:FalcaPOS.Common.Converters;assembly=FalcaPOS.Common"
             xmlns:prism="http://prismlibrary.com/"
            prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="stylelabel" TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5 5 0 0"></Setter>
        </Style>
        <Style x:Key="IconMargin" TargetType="materialDesign:PackIcon">
            <Setter Property="Margin" Value="0,20,0,0" />
        </Style>
        <converter:ArrayToVisibilityConverter x:Key="ArrayToVisibilityConverter"/>
    </UserControl.Resources>
    
        <Grid>
            <Grid.ColumnDefinitions>

             <ColumnDefinition Width="550"/>
            <ColumnDefinition Width="500"/>

        </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
              
        </Grid.RowDefinitions>
           
            <Grid Grid.Row="0" Grid.Column="0" Margin="0 5 0 0 ">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="200"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                    <Label Margin="5 5 0 0" HorizontalContentAlignment="Left" FontSize="14" FontWeight="Bold"  Grid.Column="0" Grid.Row="0" Content="PARTICULARS"></Label>
                    <Label Margin="0 5 0 0" HorizontalContentAlignment="Left" FontSize="14"  FontWeight="Bold" Grid.Column="2" Grid.Row="0" Content="AMOUNT"></Label>
            <Button Width="50" materialDesign:ButtonAssist.CornerRadius="10" ToolTip="Refresh" Margin="70 0 0 0" HorizontalContentAlignment="Right" BorderThickness="0" Grid.Column="2" Grid.Row="0" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding RefreshTodaySalesCommand}"  
                    Style="{StaticResource MaterialDesignFlatButton}">
                <Button.Content>
                    <materialDesign:PackIcon Kind="Refresh"></materialDesign:PackIcon>
                </Button.Content>
            </Button>
            <materialDesign:Card Grid.Row="1" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                    <Label  Style="{StaticResource stylelabel}" Grid.Column="0" HorizontalAlignment="Left" Grid.Row="1"  Content="OPENING CASH BALANCE"></Label>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <StackPanel  Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBox x:Name="txtopening" Margin="5 5 0 0"  MaxLength="7" Visibility="{Binding DenominationModel.IsOpeningCash,Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="100" FontSize="14" 
                                 Text="{Binding DenominationModel.OpeningCash,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="KeyUp">
                                    <i:InvokeCommandAction Command="{Binding EnterOpeningCashBalanceCommand}" CommandParameter="{Binding ElementName=txtopening}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                            </i:Interaction.Behaviors>
                            
                        </TextBox>
                        <Label Margin="5 6 0 0" Visibility="{Binding DenominationModel.IsOpeningCash,Converter={StaticResource InverseBoolToVisConverter}}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="100" FontSize="14"    Content="{Binding DenominationModel.OpeningCash}">
                        </Label>
                       
                    </StackPanel>
                  
                    <Label Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}"  Style="{StaticResource stylelabel}"  Content="{Binding DenominationModel.OpeningCash}"></Label>
                    </StackPanel>

                <materialDesign:Card Grid.Row="2" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                    <Label Style="{StaticResource stylelabel}" Grid.Column="0" HorizontalAlignment="Left" Grid.Row="2" Content="TOTAL SALES FOR THE DAY"></Label>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="2">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 12 0 0" Style="{StaticResource IconMargin}"/>
                       <Label  Style="{StaticResource stylelabel}"  Content="{Binding DenominationModel.TotalSales}"></Label>
                    <!--<Button Margin="10 0 0 0" BorderThickness="0" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding RefreshTodaySalesCommand}"  Style="{StaticResource MaterialDesignOutlinedButton}">
                        <Button.Content>
                            <materialDesign:PackIcon Kind="Refresh"></materialDesign:PackIcon>
                        </Button.Content>
                    </Button>-->
                </StackPanel>

                <materialDesign:Card Grid.Row="3" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                    <Label Style="{StaticResource stylelabel}" Grid.Column="0" HorizontalAlignment="Left" Grid.Row="3" Content="CASH SALES"></Label>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="3">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 12 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  Style="{StaticResource stylelabel}"  Content="{Binding DenominationModel.Cash}"></Label>
                    </StackPanel>

                <materialDesign:Card Grid.Row="4" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                    <Label Style="{StaticResource stylelabel}" Grid.Column="0" HorizontalAlignment="Left" Grid.Row="4" Content="UPI SALES"></Label>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="4">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 12 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  Style="{StaticResource stylelabel}"  Content="{Binding DenominationModel.UPI}"></Label>
                    </StackPanel>

                <materialDesign:Card Grid.Row="5" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                <Label Style="{StaticResource stylelabel}" Grid.Column="0" HorizontalAlignment="Left" Grid.Row="5" Content="CREDIT SALES"></Label>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="5">
                    <materialDesign:PackIcon Kind="Rupee" Margin="0 12 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  Style="{StaticResource stylelabel}"  Content="{Binding DenominationModel.Credit}"></Label>
                </StackPanel>

                <materialDesign:Card Grid.Row="6" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                    <Label Style="{StaticResource stylelabel}" Grid.Column="0" HorizontalAlignment="Left" Grid.Row="6" Content="AVAILABLE CASH BALANCE"></Label>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="6">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 12 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  Style="{StaticResource stylelabel}"  Content="{Binding DenominationModel.AvailableCash}"></Label>
                    </StackPanel>

            <materialDesign:Card Grid.Row="7"  Grid.ColumnSpan="3" Margin="0 3 0 0"></materialDesign:Card>
            <Label Style="{StaticResource stylelabel}" Grid.Column="0" HorizontalAlignment="Left" Grid.Row="7" Content="DEPOSIT FOR THE DAY"></Label>
            
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="7">
               
                <materialDesign:PackIcon Kind="Rupee" Margin="0 12 0 0" Style="{StaticResource IconMargin}"/>
                <Label x:Name="txtdepost" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}" Margin="5 0 0 0"  HorizontalAlignment="Left" VerticalAlignment="Center" Width="70" FontSize="14"  
                             Content="{Binding DenominationModel.Deposit,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyUp">
                                <i:InvokeCommandAction Command="{Binding EnterDayDepostiCommand}" CommandParameter="{Binding ElementName=txtdepost}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->
                    <!--<i:Interaction.Behaviors>
                            <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                        </i:Interaction.Behaviors>-->
                </Label>
                <!--<Button Margin="0 0 0 0" BorderThickness="0" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding DepositeAttanchemntCommad}" CommandParameter="{Binding}"  Style="{StaticResource MaterialDesignOutlinedButton}">
                        <Button.Content>
                            <materialDesign:PackIcon Kind="Attachment"></materialDesign:PackIcon>
                        </Button.Content>
                    </Button>-->
                    <Label  Style="{StaticResource stylelabel}" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}"  Content="{Binding DenominationModel.Deposit}"></Label>
                <!--<StackPanel  Visibility="{Binding DenominationModel.Deposit,Converter={StaticResource NotZeroToVisibilityConverter}}">
                    <Button Margin="0 0 0 0" BorderThickness="0" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}" Command="{Binding DownloadDenominationCommand}" CommandParameter="{Binding}"  Style="{StaticResource MaterialDesignOutlinedButton}">
                        <Button.Content>
                            <materialDesign:PackIcon Kind="Download"></materialDesign:PackIcon>
                        </Button.Content>
                    </Button>
                </StackPanel>-->

                <Button FontSize="22" Visibility="{Binding IsStoreVisibile,Converter={StaticResource InverseBoolToVisConverter}}" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:DenominationView}}, Path=DataContext.AddDepositCommad}"  CommandParameter="{Binding}"  Margin="0 0 20 0" HorizontalAlignment="Left" Style="{DynamicResource MaterialDesignFlatButton}">+</Button>
            </StackPanel>

                <materialDesign:Card Grid.Row="8" Grid.ColumnSpan="3" Margin="0 3 0 0"></materialDesign:Card>
                <Label Style="{StaticResource stylelabel}" Grid.Column="0" HorizontalAlignment="Left" Grid.Row="8" Content="SALES RETURN CASH"></Label>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="8">
                    <materialDesign:PackIcon Kind="Rupee" Margin="0 12 0 0" Style="{StaticResource IconMargin}"/>
                    <TextBox x:Name="txtsalesreturn" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}" Margin="5 0 0 0" MaxLength="7" HorizontalAlignment="Left" VerticalAlignment="Center" Width="100" FontSize="14"  
                             Text="{Binding DenominationModel.SalesReturnCash,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyUp">
                                <i:InvokeCommandAction Command="{Binding EnterDaySalesReturnCashCommand}" CommandParameter="{Binding ElementName=txtsalesreturn}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <i:Interaction.Behaviors>
                            <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                        </i:Interaction.Behaviors>
                    </TextBox>
                    <Label  Style="{StaticResource stylelabel}" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}"  Content="{Binding DenominationModel.SalesReturnCash}"></Label>
                </StackPanel>

                <materialDesign:Card Grid.Row="9"  Grid.ColumnSpan="3" Margin="0 3 0 0"></materialDesign:Card>
                <Label Style="{StaticResource stylelabel}" Grid.Column="0"  HorizontalAlignment="Left" Grid.Row="9" Content="CLOSING CASH BALANCE"></Label>
                    <StackPanel  Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="9">
                    <materialDesign:PackIcon Kind="Rupee" Margin="0 13 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  Style="{StaticResource stylelabel}" FontWeight="Bold"  Content="{Binding DenominationModel.ClosingCash}"></Label>
                    </StackPanel>
            <StackPanel Grid.Row="10" Grid.ColumnSpan="3" Margin="0 0 0 0">
                <Label FontSize="16" Visibility="{Binding DenominationModel.FileUploadListInfo,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource ArrayToVisibilityConverter}}">Deposit Attachment</Label>
                <ItemsControl Style="{DynamicResource itemcontrolstyleskualterpage}" ItemsSource="{Binding DenominationModel.FileUploadListInfo,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:Card
                                materialDesign:ShadowAssist.ShadowDepth="Depth1"
                                Height="50" Margin="2" Padding="5"                                
                                >
                                    <Grid>
                                        <Grid.ColumnDefinitions>

                                            <ColumnDefinition Width="1*"></ColumnDefinition>
                                            <ColumnDefinition Width="5*"></ColumnDefinition>
                                            <ColumnDefinition Width="1*"></ColumnDefinition>
                                            <ColumnDefinition Width="1*"></ColumnDefinition>
                                            <ColumnDefinition Width="1*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>



                                        <Image Source="{DynamicResource fileicon}" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"></Image>

                                        <Label  Grid.Column="1"                                  
                                   
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Content="{Binding FileName}"
                                    ToolTip="{Binding FileName}" />

                                        <Label Grid.Column="1" Grid.Row="1"
                                        VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Content="{Binding Path=Size}"
                                    ToolTip="{Binding Path=Size}" />

                                      
                                        <Button Grid.Column="4" Grid.Row="0" Grid.RowSpan="2"
                                    HorizontalAlignment="Right"
                                    Foreground="Red"       
                                    Command="{Binding DataContext.DeleteUploadFileCommand, RelativeSource={RelativeSource AncestorType={x:Type local:DenominationView}}}"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource MaterialDesignToolForegroundButton}">
                                            <materialDesign:PackIcon Kind="Trash" ToolTip="Remove" />
                                        </Button>

                                    </Grid>
                                </materialDesign:Card>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
                </Grid>

            <Grid Grid.Row="0" Grid.Column="1" Margin="5 5 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="40"/>
                   
                </Grid.RowDefinitions>
                    <Label HorizontalContentAlignment="Center" FontSize="14" FontWeight="Bold" Grid.Column="0" Grid.Row="0" Content="PARTICULARS"></Label>
                    <Label  HorizontalContentAlignment="Center" FontSize="14" FontWeight="Bold" Grid.Column="1" Grid.Row="0" Content="COUNT"></Label>
                    <Label  HorizontalContentAlignment="Center" FontSize="14" FontWeight="Bold" Grid.Column="2" Grid.Row="0" Margin="0 0 20 0" Content="TOTAL"></Label>
                   
            <materialDesign:Card Grid.Row="1" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="1">
                    <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  HorizontalContentAlignment="Center"  Margin="0 5 0 0" FontSize="16"  Content="2000"></Label>
                </StackPanel>


                <TextBox x:Name="txt2000" MaxLength="4"  Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Width="100"  Grid.Column="1" Grid.Row="1" Text="{Binding DenominationModel.notes_2000,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <i:InvokeCommandAction Command="{Binding EnterTxtChangeCount2000Command}" CommandParameter="{Binding ElementName=txt2000}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                    </i:Interaction.Behaviors>
                </TextBox>

                <Label  Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}"  HorizontalContentAlignment="Center" FontSize="14" Width="100"  Grid.Column="1" Grid.Row="1"  Content="{Binding DenominationModel.notes_2000}">
                </Label>
                    
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="20 0 0 0" Grid.Column="2" Grid.Row="1">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  HorizontalContentAlignment="Left" Width="80"  Margin="0 5 0 0" FontSize="16"  Content="{Binding DenominationModel.Totalin2000}"></Label>
                    </StackPanel>

                    <materialDesign:Card Grid.Row="2" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="2">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                        <Label  HorizontalContentAlignment="Center"  Margin="0 5 0 0" FontSize="16"  Content="500"></Label>
                    </StackPanel>


                <TextBox x:Name="txt500"  Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}" MaxLength="4"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Width="100"  Grid.Column="1" Grid.Row="2" Text="{Binding DenominationModel.notes_500,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <i:InvokeCommandAction Command="{Binding EnterTxtChangeCount500Command}" CommandParameter="{Binding ElementName=txt500}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                    </i:Interaction.Behaviors>
                </TextBox>

                <Label Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}"  HorizontalContentAlignment="Center" FontSize="14" Width="100"  Grid.Column="1" Grid.Row="2"  Content="{Binding DenominationModel.notes_500}"></Label>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="20 0 0 0" Grid.Column="2" Grid.Row="2">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  HorizontalContentAlignment="Left" Width="80" Margin="0 5 0 0" FontSize="16"  Content="{Binding DenominationModel.Totalin500}"></Label>
                    </StackPanel>

                <materialDesign:Card Grid.Row="3" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="3">
                    <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  HorizontalContentAlignment="Center"  Margin="0 5 0 0" FontSize="16"  Content="200"></Label>
                </StackPanel>

                <TextBox x:Name="txt200" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}" MaxLength="4"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Width="100"  Grid.Column="1" Grid.Row="3" Text="{Binding DenominationModel.notes_200,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <i:InvokeCommandAction Command="{Binding EnterTxtChangeCount200Commands}" CommandParameter="{Binding ElementName=txt200}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                    </i:Interaction.Behaviors>
                </TextBox>

                <Label  Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}"  HorizontalContentAlignment="Center" FontSize="14" Width="100"  Grid.Column="1" Grid.Row="3"  Content="{Binding DenominationModel.notes_200}">
                </Label>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="20 0 0 0" Grid.Column="2" Grid.Row="3">
                    <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  HorizontalContentAlignment="Left" Width="80"  Margin="0 5 0 0" FontSize="16"  Content="{Binding DenominationModel.Totalin200}"></Label>
                </StackPanel>



                <materialDesign:Card Grid.Row="4" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="4">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                        <Label  HorizontalContentAlignment="Center"  Margin="0 5 0 0" FontSize="16"  Content="100"></Label>
                    </StackPanel>

                <TextBox x:Name="txt100" MaxLength="4"  Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Width="100"  Grid.Column="1" Grid.Row="4" Text="{Binding DenominationModel.notes_100,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <i:InvokeCommandAction Command="{Binding EnterTxtChangeCount100Command}" CommandParameter="{Binding ElementName=txt100}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                    </i:Interaction.Behaviors>
                </TextBox>

                <Label Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}"  HorizontalContentAlignment="Center" FontSize="14" Width="100" Grid.Column="1" Grid.Row="4" Content="{Binding DenominationModel.notes_100}"></Label>
                    <StackPanel Orientation="Horizontal" Margin="20 0 0 0" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="4">
                        <materialDesign:PackIcon Kind="Rupee"  Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  HorizontalContentAlignment="Left"  Width="80" Margin="0 5 0 0" FontSize="16"  Content="{Binding DenominationModel.Totalin100}"></Label>
                    </StackPanel>

                    <materialDesign:Card Grid.Row="5" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="5">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                        <Label  HorizontalContentAlignment="Center"  Margin="0 5 0 0" FontSize="16"  Content="50"></Label>
                    </StackPanel>

                <TextBox x:Name="txt50" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}" MaxLength="4"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Width="100"  Grid.Column="1" Grid.Row="5" Text="{Binding DenominationModel.notes_50,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <i:InvokeCommandAction Command="{Binding EnterTxtChangeCount50Command}" CommandParameter="{Binding ElementName=txt50}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <Label Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}" HorizontalContentAlignment="Center" FontSize="14" Width="100" Grid.Column="1" Grid.Row="5"   Content="{Binding DenominationModel.notes_50}"></Label>
                    <StackPanel Orientation="Horizontal" Margin="20 0 0 0" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="5">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  HorizontalContentAlignment="Left"  Width="80" Margin="0 5 0 0" FontSize="16"  Content="{Binding DenominationModel.Totalin50}"></Label>
                    </StackPanel>


                    <materialDesign:Card Grid.Row="6" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="6">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                        <Label  HorizontalContentAlignment="Center"  Margin="0 5 0 0" FontSize="16"  Content="20"></Label>
                    </StackPanel>

                <TextBox x:Name="txt20"  Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}" MaxLength="5"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Width="100" Grid.Column="1" Grid.Row="6"   Text="{Binding DenominationModel.notes_20,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <i:InvokeCommandAction Command="{Binding EnterTxtChangeCount20Command}" CommandParameter="{Binding ElementName=txt20}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                    </i:Interaction.Behaviors>
                </TextBox>

                <Label Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}" HorizontalContentAlignment="Center" FontSize="14" Width="100" Grid.Column="1" Grid.Row="6"   Content="{Binding DenominationModel.notes_20}"></Label>
                    <StackPanel Orientation="Horizontal" Margin="20 0 0 0" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="6">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  HorizontalContentAlignment="Left" Width="80"  Margin="0 5 0 0" FontSize="16"  Content="{Binding DenominationModel.Totalin20}"></Label>
                    </StackPanel>


                    <materialDesign:Card Grid.Row="7" Grid.ColumnSpan="3" Margin="0 2 0 0"></materialDesign:Card>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="7">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                        <Label  HorizontalContentAlignment="Center"  Margin="0 5 0 0" FontSize="16"  Content="10"></Label>
                    </StackPanel>

                <TextBox x:Name="txt10" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}"  MaxLength="5"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Width="100" Grid.Column="1" Grid.Row="7"  Text="{Binding DenominationModel.notes_10,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <i:InvokeCommandAction Command="{Binding EnterTxtChangeCount10Command}" CommandParameter="{Binding ElementName=txt10}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                    </i:Interaction.Behaviors>
                </TextBox>

                <Label Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}" HorizontalContentAlignment="Center" FontSize="14" Width="100" Grid.Column="1" Grid.Row="7"  Content="{Binding DenominationModel.notes_10}"></Label>
                    <StackPanel Orientation="Horizontal" Margin="20 0 0 0" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="7">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  HorizontalContentAlignment="Left" Width="80"  Margin="0 5 0 0" FontSize="16"  Content="{Binding DenominationModel.Totalin10}"></Label>
                    </StackPanel>


                    <materialDesign:Card Grid.Row="8" Grid.ColumnSpan="3" Margin="0 2 0 0" ></materialDesign:Card>
                    <Label  HorizontalContentAlignment="Center" FontSize="14" Grid.Column="0" Grid.Row="8" Content="Coins"></Label>
                <TextBox x:Name="txtcoins" Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource BooleanToVisibilityConverter}}"  MaxLength="6"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Width="100"  Grid.Column="1" Grid.Row="8"   Text="{Binding DenominationModel.Coins,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <i:InvokeCommandAction Command="{Binding EnterTxtChangeCountCoinsCommand}" CommandParameter="{Binding ElementName=txtcoins}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <Label Visibility="{Binding DenominationModel.IsRole,Converter={StaticResource InverseBoolToVisConverter}}" HorizontalContentAlignment="Center" FontSize="14" Width="100"  Grid.Column="1" Grid.Row="8"  Content="{Binding DenominationModel.Coins}" ></Label>
                    <StackPanel Orientation="Horizontal" Margin="20 0 0 0" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="8">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <Label  HorizontalContentAlignment="Left" Width="80"  Margin="0 5 0 0" FontSize="16"  Content="{Binding DenominationModel.TotalinCoins}"></Label>
                    </StackPanel>


                    <materialDesign:Card Grid.Row="9" Grid.ColumnSpan="3" Margin="0 2 0 0" ></materialDesign:Card>
                    <Label  HorizontalContentAlignment="Center" FontWeight="Bold" FontSize="16" Grid.Column="0" Grid.Row="9" Content="Total"></Label>
                    <StackPanel Orientation="Horizontal"  Margin="40 0 0 0"  Grid.Column="2" Grid.Row="9">
                        <materialDesign:PackIcon Kind="Rupee" Margin="0 15 0 0" Style="{StaticResource IconMargin}"/>
                    <Label   FontWeight="Bold"  Margin="0 5 0 0" FontSize="16"  Content="{Binding DenominationModel.Total,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></Label>
                    </StackPanel>

                </Grid>

         
       
    </Grid>
</UserControl>
