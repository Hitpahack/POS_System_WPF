<mah:MetroWindow
    x:Class="FalcaPOS.Shell.Views.Shell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:mah1="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"                   
     xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
     xmlns:wpfanimated="http://wpfanimatedgif.codeplex.com"
    xmlns:prism="http://prismlibrary.com/"
    AutomationProperties.AutomationId="suggiWindowId"
    Title=""
    Width="800"
    Height="450"
    prism:ViewModelLocator.AutoWireViewModel="True"
    LeftWindowCommandsOverlayBehavior="HiddenTitleBar"
    RightWindowCommandsOverlayBehavior="HiddenTitleBar"
    WindowButtonCommandsOverlayBehavior="HiddenTitleBar"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    mc:Ignorable="d">

    <mah:MetroWindow.Resources>
       
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <UserControl x:Key="CustomDialogTest"
                         x:Name="CustomDialogTest"
                     Background="Transparent"
                     >
            <Grid Background="Transparent">
                <Image   wpfanimated:ImageBehavior.AnimatedSource="{DynamicResource Loading}"
               wpfanimated:ImageBehavior.RepeatBehavior="1"
               wpfanimated:ImageBehavior.AnimateInDesignMode="False"
               wpfanimated:ImageBehavior.AutoStart="True"              
               Height="250" Margin="0 -30 0 20 " >
                </Image>
            </Grid>
        </UserControl>
    </mah:MetroWindow.Resources>

    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <Image
                Width="100"
                Height="20"
                AutomationProperties.AutomationId="imgFalcaLogoId"
                MouseLeftButtonDown="LauchFalcaSite"
                Source="/logo.ico" />
            <TextBlock VerticalAlignment="Center" TextDecorations="Underline">
                <Run Text="V"/>
                <Run Text="{Binding BuildNumber}"/>
            </TextBlock>
        </mah:WindowCommands>

    </mah:MetroWindow.LeftWindowCommands>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button
                AutomationProperties.AutomationId="btnGSTCalculator"
                Command="{Binding ShowGSTCalcCommand}"
                Visibility="{Binding Path=IsShowWelcomeMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Foreground="White">
                GST Calculator
            </Button>
            <Button
                AutomationProperties.AutomationId="btnReleaseNoteId"
                Command="{Binding ShowReleaseNotesCommand}"
                Visibility="Collapsed"
                Foreground="White">
                Release Notes
            </Button>
            <materialDesign:Badged Margin="0 10 10 0" BadgeColorZoneMode="Standard" Badge="{Binding Path=NotificationCount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Visibility="{Binding Path=IsShowWelcomeMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <Button
                AutomationProperties.AutomationId="btnNotificationId"
                Command="{Binding ShowNotificationCommand}"
                Foreground="White" >
                    <Button.Content>
                        <materialDesign:PackIcon Kind="Notifications" />
                    </Button.Content>
                </Button>
            </materialDesign:Badged>

            <Button
                x:Name="lblwelcome"
                Foreground="White"
                Visibility="Collapsed" />
            <!--<Button
                x:Name="lblsignout"
                Margin="0,-2,0,0"
                Command="{Binding SignOutCommand}"
                Content="SignOut"
                Foreground="White"
                Visibility="Collapsed" />-->
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl prism:RegionManager.RegionName="FlyoutRegion">
            <mah:FlyoutsControl.ItemContainerStyle>
                <Style TargetType="{x:Type mah:Flyout}">
                    <Setter Property="Header" Value="{Binding Path=Header, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Setter Property="IsOpen" Value="{Binding Path=IsOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Setter Property="Width" Value="{Binding Path=Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Setter Property="Height" Value="{Binding Path=Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Setter Property="Theme" Value="Light" />
                    <!--<Setter Property="IsModal" Value="True" />-->
                    <Setter Property="AnimateOpacity" Value="True" />
                    <Setter Property="AreAnimationsEnabled" Value="True" />
                    <Setter Property="Position" Value="{Binding Path=Position, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <!--<EventSetter Event="ClosingFinished" Handler="Flyout_ClosingFinished" />-->
                </Style>
            </mah:FlyoutsControl.ItemContainerStyle>

        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>
    <mah1:DialogHost DialogTheme="Inherit" Identifier="RootDialog">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <ContentControl AutomationProperties.AutomationId="txtloginId" Grid.Row="0" prism:RegionManager.RegionName="LoginRegion" />
            <!--<StatusBar
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch">
                <StatusBarItem Content="{Binding License}" />
                <Separator Style="{StaticResource MahApps.Styles.Separator.StatusBar}" />
                <StatusBarItem>Current Build</StatusBarItem>
                <StatusBarItem Content="{Binding Path=BuildNumber}" />


            </StatusBar>-->
        </Grid>
    </mah1:DialogHost>

</mah:MetroWindow>
