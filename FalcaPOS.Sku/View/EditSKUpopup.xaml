<UserControl x:Class="FalcaPOS.Sku.View.EditSKUpopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
               xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behavior="clr-namespace:FalcaPOS.Common.Behaviors;assembly=FalcaPOS.Common"
             xmlns:converters="clr-namespace:FalcaPOS.Common.Converters;assembly=FalcaPOS.Common"
             xmlns:local="clr-namespace:FalcaPOS.Sku.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <StackPanel Width="350" Background="White" Orientation="Vertical" AutomationProperties.AutomationId="btnpopupid">
        <Border BorderBrush="#252572" BorderThickness="1" Background="#252572">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0"
         Width="100"
         Height="20"
         AutomationProperties.AutomationId="imgPopupNewCustomerId"
         Source="{DynamicResource logo}"/>
                <TextBlock Grid.Column="1" Foreground="#FFFFFF" Style="{DynamicResource po}" FontSize="20" Text="Edit Product Details" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>
                <Button  Grid.Column="2" Foreground="#FFFFFF" HorizontalAlignment="Right" x:Name="btnclose" Command="materialDesign:DialogHost.CloseDialogCommand" Style="{StaticResource MaterialDesignFlatButton}" Margin="0 5 5 5" ToolTip="Close"  Content="X" FontSize="20" >
                </Button>
            </Grid>


        </Border>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition Height="60"/>
                
            </Grid.RowDefinitions>
            <TextBox Width="180" Grid.Row="0" Text="{Binding EditSKUProduct.ProductName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Product Name *" materialDesign:HintAssist.IsFloating="True">
            </TextBox>
            <TextBox Width="180" Grid.Row="1" Text="{Binding EditSKUProduct.TechnicalName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Technical Name *" materialDesign:HintAssist.IsFloating="True"></TextBox>
            <TextBox Width="180" Grid.Row="2"   Text="{Binding EditSKUProduct.PackingSize,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Packing Size *" materialDesign:HintAssist.IsFloating="True">
                <i:Interaction.Behaviors>
                    <behavior:TextBoxInputRegExBehaviour EmptyValue="{x:Null}"  RegularExpression="^[0-9]+$" />
                </i:Interaction.Behaviors>
            </TextBox>
            <ComboBox Width="180" Grid.Row="3" ItemsSource="{Binding SubUnitTypes}"   SelectedItem="{Binding EditSKUProduct.UOM,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  materialDesign:HintAssist.Hint="UOM" materialDesign:HintAssist.IsFloating="True"></ComboBox>
            <TextBox Width="180" Grid.Row="4" MaxLength="8"   Text="{Binding EditSKUProduct.HSN,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="HSN *" materialDesign:HintAssist.IsFloating="True"></TextBox>
            <ComboBox Width="180" Grid.Row="5" ItemsSource="{Binding WarrantyServices}"   DisplayMemberPath="Name" SelectedItem="{Binding SelectedWarrantyService,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Warranty/Services" materialDesign:HintAssist.IsFloating="True"></ComboBox>
            <ComboBox Width="180" Grid.Row="6" ItemsSource="{Binding GSTslabs,Mode=TwoWay}"  DisplayMemberPath="Name"  SelectedItem="{Binding SelectedGSTslab,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  materialDesign:HintAssist.Hint="GST" materialDesign:HintAssist.IsFloating="True"></ComboBox>
            <TextBox Width="180" Grid.Row="7"    Text="{Binding EditSKUProduct.MinMargin,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="MinMargin" materialDesign:HintAssist.IsFloating="True">
                <i:Interaction.Behaviors>
                    <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                </i:Interaction.Behaviors>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <prism:InvokeCommandAction Command="{Binding MinMarginTextChangedCommand}" CommandParameter="{Binding}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBox Width="180" Grid.Row="8" materialDesign:HintAssist.Hint="Remarks" materialDesign:HintAssist.IsFloating="True" Text="{Binding EditSKUProduct.Remarks,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
            <Button Command="{Binding SaveAndApproveCommand}" CommandParameter="{Binding ElementName=btnclose}" Style="{StaticResource RoundTextButton}" Width="180" Margin="0 5 0 5" Grid.Row="9" Content="Save and Approve"></Button>
            <Image Grid.Column="2" Grid.RowSpan="9" Margin="0,0,0,0" Stretch="Uniform" StretchDirection="Both" Source="{DynamicResource greenshadow_addcustomer}">
            </Image>
        </Grid>
    </StackPanel>
    
</UserControl>
 