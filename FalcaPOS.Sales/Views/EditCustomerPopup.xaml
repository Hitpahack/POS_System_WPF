<UserControl x:Class="FalcaPOS.Sales.Views.EditCustomerPopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FalcaPOS.Sales.Views"
               xmlns:UserControl="clr-namespace:FalcaPOS.Sales.Views"
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
              xmlns:behavior="clr-namespace:FalcaPOS.Common.Behaviors;assembly=FalcaPOS.Common"
            xmlns:converter="clr-namespace:FalcaPOS.Common.Converters;assembly=FalcaPOS.Common"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
            xmlns:prism="http://prismlibrary.com/"
            prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="NewCustomerIcon" TargetType="materialDesign:PackIcon">
            <Setter Property="Width" Value="22"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="Margin" Value="0 20 5 0"/>
        </Style>
        <converter:MultiCheckBoxConverter x:Key="multicheckconverter"/>
    </UserControl.Resources>
    <StackPanel Width="400" Margin="0 0 0 10" Background="White" Orientation="Vertical">
        <Border BorderBrush="#252572" BorderThickness="1" Background="#252572">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0"
                Width="100"
                Height="20"
                AutomationProperties.AutomationId="imgPopupNewCustomerId"
                Source="{DynamicResource logo}"/>
                <TextBlock Grid.Column="1" Foreground="#FFFFFF" Style="{DynamicResource po}" FontSize="20" Text="Edit Customer Details" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>
                <Button  Grid.Column="2" Foreground="#FFFFFF" HorizontalAlignment="Right" x:Name="btnclose" Command="materialDesign:DialogHost.CloseDialogCommand" Style="{StaticResource MaterialDesignFlatButton}" Margin="0 5 5 5" ToolTip="Close"  Content="X" FontSize="20" >
                </Button>
            </Grid>


        </Border>


        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="7*"></ColumnDefinition>
                <ColumnDefinition Width="3*"/>
                
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="53"/>
                <RowDefinition Height="70"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="20 5 0 0" Grid.Row="0" Orientation="Horizontal" Grid.ColumnSpan="2">
                <materialDesign:PackIcon Style="{StaticResource NewCustomerIcon}" Kind="Phone"/>

                <TextBlock  Margin="5 20 0 0" Height="40" FontFamily="{DynamicResource Poppins}" FontSize="14" FontWeight="Bold"  Text="{Binding Phone,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                          AutomationProperties.AutomationId="txtPhoneId"
                         Width="200" materialDesign:HintAssist.Hint="Phone Number*"  materialDesign:HintAssist.IsFloating="True">

                </TextBlock>
            </StackPanel>
            <StackPanel Margin="20,0,0,0" Grid.Row="1" Orientation="Horizontal" Grid.ColumnSpan="2">
                <materialDesign:PackIcon  Style="{StaticResource NewCustomerIcon}" Kind="Person"/>
                <TextBox Margin="5 0 0 0" Height="40"   
                          AutomationProperties.AutomationId="txtNameId"
                         Text="{Binding CustomerName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="200" materialDesign:HintAssist.Hint="Name of Customer*" materialDesign:HintAssist.IsFloating="True"/>
            </StackPanel>
            <StackPanel Margin="20,0,0,0" Grid.Row="2" Orientation="Horizontal" Grid.ColumnSpan="2">
                <Image  Width="22" Height="22" Margin="0 10 0 0"  Source="{DynamicResource CustomerDetailIcon}"/>

                <ComboBox Margin="5 0 0 0" ItemsSource="{Binding CustomerTypes,Mode=TwoWay}" 
                          SelectedValue="{Binding SelectCustomerType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                          Height="40" 
                           AutomationProperties.AutomationId="txtCustomerTypeId"
                          Width="200" materialDesign:HintAssist.Hint="Type Of Customer*" materialDesign:HintAssist.IsFloating="True"/>
            </StackPanel>
            <StackPanel Margin="20,0,0,0" Grid.Row="3" Orientation="Horizontal" Grid.ColumnSpan="2">
                <Image Width="22" Height="22" Margin="0 20 0 0" Source="{StaticResource PinIcon}"/>
                <TextBox Margin="5 0 0 0" Height="40"  
                          AutomationProperties.AutomationId="txtPinCodeId"
                         Text="{Binding PinCode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" MaxLength="6" Width="200" materialDesign:HintAssist.Hint="Pin Code*" materialDesign:HintAssist.IsFloating="True">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Return" CommandParameter="{Binding PinCode}" Command="{Binding GetPinCodeDetailsCommand}" />
                        <KeyBinding Key="Enter"  CommandParameter="{Binding PinCode}" Command="{Binding GetPinCodeDetailsCommand}" />
                    </TextBox.InputBindings>
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                    </i:Interaction.Behaviors>
                </TextBox>
            </StackPanel>
            <StackPanel Margin="20,0,0,0" Grid.Row="4" Orientation="Horizontal" Grid.ColumnSpan="2">
                <Image Width="22" Height="22" Margin="0 20 0 0" Source="{StaticResource State}"/>
                <ComboBox Margin="5 0 0 0" ItemsSource="{Binding States,Mode=TwoWay}"
                          DisplayMemberPath="Name"
                          SelectedValue="{Binding SelectState,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                           AutomationProperties.AutomationId="txtStateId"
                          Height="40" 
                          Width="200" materialDesign:HintAssist.Hint="State*" materialDesign:HintAssist.IsFloating="True">
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <prism:InvokeCommandAction Command="{Binding StateSelectionCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                </ComboBox>
            </StackPanel>
            <StackPanel  Margin="20,0,0,0" Grid.Row="5" Orientation="Horizontal" Grid.ColumnSpan="2">
                <Image Width="22" Height="22" Margin="0 20 0 0" Source="{StaticResource District}"/>
                <ComboBox Margin="5 0 0 0" ItemsSource="{Binding Districts,Mode=TwoWay}"
                          DisplayMemberPath="Name"
                          SelectedValue="{Binding SelectDistrict,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                           AutomationProperties.AutomationId="txtDistrictId"
                          Height="40" 
                          Width="200" materialDesign:HintAssist.Hint="District*" materialDesign:HintAssist.IsFloating="True"/>
            </StackPanel>
            <StackPanel Margin="20,0,0,0" Grid.Row="6" Orientation="Horizontal" Grid.ColumnSpan="2">
                <Image Width="22" Height="22" Margin="0 20 0 0" Source="{StaticResource VillageIcon}"/>
                <ComboBox Margin="5 0 0 0" ItemsSource="{Binding Villages,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                          DisplayMemberPath="Name"
                          SelectedValue="{Binding SelectedVillages,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                           AutomationProperties.AutomationId="txtVillageNameId"
                          Height="40" 
                          Width="200" materialDesign:HintAssist.Hint="Village*" materialDesign:HintAssist.IsFloating="True"/>
            </StackPanel>
            <StackPanel Margin="20,0,0,0" Grid.Row="7" Orientation="Horizontal" Grid.ColumnSpan="2">
                <Image Width="22" Height="22" Margin="0 20 0 0" Source="{StaticResource VillageIcon}"/>
                <TextBox Margin="5 0 0 0" Height="40"   
                          AutomationProperties.AutomationId="txtNameId"
                         Text="{Binding Address,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="200" materialDesign:HintAssist.Hint="Address" materialDesign:HintAssist.IsFloating="True"/>
            </StackPanel>
            <StackPanel Margin="20,0,0,0" Grid.Row="8" Orientation="Horizontal" Grid.ColumnSpan="2">
                <Image Width="22" Height="22" Margin="0 20 0 0" Source="{StaticResource Gst}"/>
                <TextBox Margin="5 0 0 0" Height="40" 
                         MaxLength="15"
                          AutomationProperties.AutomationId="txtGstNumberId"
                         Text="{Binding GSTIN,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="200" materialDesign:HintAssist.Hint="GST Number" materialDesign:HintAssist.IsFloating="True">
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="{x:Null}" RegularExpression="^[a-zA-Z0-9]*$" />
                    </i:Interaction.Behaviors>
                </TextBox>
            </StackPanel>
            <StackPanel Margin="20 0 0 0" Grid.Row="9" Orientation="Horizontal">
                <materialDesign:PackIcon Margin="0 20 0 0" Kind="CropLandscape" Height="22" Width="22"></materialDesign:PackIcon>
                <TextBox Margin="5 0 0 0" Height="40" 
 AutomationProperties.AutomationId="txtSalesAcreageId"
  Text="{Binding Acreage,Mode=TwoWay}" Width="200" MaxLength="4" materialDesign:HintAssist.Hint="Acreage" materialDesign:HintAssist.IsFloating="True">
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.]+$" />
                    </i:Interaction.Behaviors>
                </TextBox>
            </StackPanel>
            <StackPanel Margin="20 0 0 0" Grid.Row="10" Orientation="Horizontal">
                <materialDesign:PackIcon Margin="0 20 0 0" Kind="AddressMarker" Height="22" Width="22"></materialDesign:PackIcon>
                <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                    <CheckBox x:Name="cbirrigation" IsChecked="{Binding Irrigation}" Content="Irrigation" Command="{Binding LandTypeCommand}">
                        <CheckBox.CommandParameter>
                            <MultiBinding Converter="{StaticResource multicheckconverter}">
                                <Binding ElementName="cbirrigation" Path="Content"/>
                                <Binding ElementName="cbirrigation" Path="IsChecked"/>
                            </MultiBinding>
                        </CheckBox.CommandParameter>
                    </CheckBox>
                    <CheckBox x:Name="cbdry" IsChecked="{Binding Dry}" Content="Dry" Margin="10 0 0 0" Command="{Binding LandTypeCommand}">
                        <CheckBox.CommandParameter>
                            <MultiBinding Converter="{StaticResource multicheckconverter}">
                                <Binding ElementName="cbdry" Path="Content"/>
                                <Binding ElementName="cbdry" Path="IsChecked"/>
                            </MultiBinding>
                        </CheckBox.CommandParameter>
                    </CheckBox>
                </StackPanel>
            </StackPanel>
            <StackPanel Margin="20 0 0 0" Grid.Row="11" Orientation="Horizontal">
                <materialDesign:PackIcon Margin="0 20 0 0" Kind="Crop" Height="22" Width="22"></materialDesign:PackIcon>
                <TextBox Margin="5 0 0 0" Height="40" 
 AutomationProperties.AutomationId="txtSalesCropsId"
  Text="{Binding Crop,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="200" materialDesign:HintAssist.Hint="Crops" materialDesign:HintAssist.IsFloating="True">
                </TextBox>
                <Button Style="{DynamicResource ActionButton}" Width="20" Height="20" Command="{Binding AddCropCommand}" CommandParameter="{Binding}">
                    <Button.Content>
                        <materialDesign:PackIcon Kind="Plus"></materialDesign:PackIcon>
                    </Button.Content>
                </Button>
            </StackPanel>
            <StackPanel Margin="20 10 0 0" Grid.Row="12" Orientation="Horizontal">
                <ItemsControl Height="50" Width="250"  Margin="0 0 0 0" Style="{StaticResource itemcontrolstyleforsmallheight}" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible"  ScrollViewer.CanContentScroll="True" ItemsSource="{Binding Crops,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel></WrapPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <materialDesign:Chip Content="{Binding}" IsDeletable="True" DeleteCommand="{Binding DataContext.RemoveCropCommand, RelativeSource={RelativeSource AncestorType={x:Type local:EditCustomerPopup}}}" DeleteCommandParameter="{Binding}"></materialDesign:Chip>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
            
            <StackPanel Grid.Row="13" Orientation="Horizontal" Grid.ColumnSpan="2">
                <Button Content="Save Customer Details" 
                        Margin="46 0 0 0"
                        Width="200"
                        Style="{StaticResource RoundTextButton}" Command="{Binding SaveCustomerPopUpCommand}" CommandParameter="{Binding ElementName=btnclose}"></Button>
            </StackPanel>

            <Image Grid.Column="2" Height="750" Grid.RowSpan="14" Margin="0,0,0,0" Stretch="Uniform" StretchDirection="Both" Source="{DynamicResource greenshadow_addcustomer}">
            </Image>
        </Grid>
    </StackPanel>
</UserControl>
