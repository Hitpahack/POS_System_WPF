<UserControl x:Class="FalcaPOS.PurchaseReturns.View.EditProduct"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FalcaPOS.PurchaseReturns.View"
             mc:Ignorable="d" 
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:behavior="clr-namespace:FalcaPOS.Common.Behaviors;assembly=FalcaPOS.Common" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
              xmlns:Converter="clr-namespace:FalcaPOS.Common.Converters;assembly=FalcaPOS.Common"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="IconMargin" TargetType="materialDesign:PackIcon">
            <Setter Property="Margin" Value="0,20,5,0" />
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Badged.Background}"></Setter>
        </Style>
        <Converter:ArrayToVisibilityConverter x:Key="ArrayToVisibility"></Converter:ArrayToVisibilityConverter>
    </UserControl.Resources>
    <StackPanel Width="1180" Height="600">
        <Button HorizontalAlignment="Right" x:Name="btnclose" Command="materialDesign:DialogHost.CloseDialogCommand" Style="{StaticResource MaterialDesignFlatButton}" Margin="0 5 5 5" ToolTip="Close" Foreground="Red" Content="X" FontSize="20" >
        </Button>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                <ComboBox Margin="20 5 0 0" IsEnabled="False"
                x:Name="supplier" MinWidth="180" 
                    materialDesign:HintAssist.Hint="Supplier Name *"
                    materialDesign:HintAssist.IsFloating="True" VerticalAlignment="Center"
                    materialDesign:TextFieldAssist.HasClearButton="True"
                    AutomationProperties.AutomationId="cmbAddInvSuppliersId"                  
                    ItemsSource="{Binding SuppliersEdit}"
                    SelectedItem="{Binding SelectedEditSupplier,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                    >
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{Binding Name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock FontWeight="Bold" Visibility="Collapsed" FontSize="14" Margin="0 30 0 0"  Text="{Binding RowCount,Mode=TwoWay}"></TextBlock>
                <TextBox Width="120" Margin="50 10 0 0" Text="{Binding ProductSKU,Mode=TwoWay}" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="SKU"></TextBox>
                <TextBlock Margin="20 30 0 0">OR</TextBlock>
                <TextBox Margin="20 10 0 0" Width="120" Text="{Binding LotNumber,Mode=TwoWay}" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Lot Number"></TextBox>
            </StackPanel>
            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Margin="0 10 0 0"  Command="{Binding DataContext.PurhcaseReturnCommand, RelativeSource={RelativeSource AncestorType={x:Type local:EditProduct}}}" Content="Search" Style="{StaticResource RoundTextButton}"></Button>
                <Button Margin="20 10 10 0" Visibility="Hidden" Command="{Binding DataContext.PurchaseResetReturnCommand, RelativeSource={RelativeSource AncestorType={x:Type local:EditProduct}}}" Content="Reset" Style="{StaticResource RoundTextButton}"></Button>
            </StackPanel>
            <StackPanel Margin="0 10 0 0" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"  Orientation="Horizontal" Visibility="{Binding IsCreditNoteVisible,Converter={StaticResource BooleanToVisibilityConverter}}"  HorizontalAlignment="Right">
                <materialDesign:PackIcon  Width="20" Height="20"                         
                                Kind="Rupee"  VerticalAlignment="Center" Margin="0 4 0 0"
                                Style="{StaticResource IconMargin}"   />
                <TextBlock Margin="10 0 0 0" VerticalAlignment="Center"  materialDesign:HintAssist.IsFloating="True" FontSize="22"  Foreground="#252572" Text="{Binding Amount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Total Amount" MinWidth="100"></TextBlock>

                <Button Margin="0 0 10 0"  HorizontalAlignment="Right" Command="{Binding DataContext.ProductChangeUpdateCommand, RelativeSource={RelativeSource AncestorType={x:Type local:EditProduct}}}"
                                    CommandParameter="{Binding ElementName=btnclose}" Style="{StaticResource RoundTextButton}">Update</Button>
            </StackPanel>
            <Grid Grid.Row="1" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
               

                <ItemsControl Margin="10 10 10 0" Style="{DynamicResource itemcontrolstyle}" Grid.Row="1"  Grid.Column="0" ItemsSource="{Binding PopPurhcaseReturnProducts,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Border Padding="0 8 0 0" x:Name="Border"  
        BorderThickness="1" BorderBrush="Silver" 
         Grid.Row="3" Grid.ColumnSpan="2" Margin="0 5 0 0" >
                                    <Grid>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="0.5*"/>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*" />
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="0.6*"/>
                                            <ColumnDefinition Width="0.6*"/>
                                            <ColumnDefinition Width="0.5*" />
                                            <ColumnDefinition Width="0.5*"/>
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton Margin="15 5 0 0" VerticalAlignment="Top"   IsChecked="{Binding IsSelected}" Style="{StaticResource MaterialDesignActionLightToggleButton}">
                                            <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding DataContext.ProductSelectCommand,RelativeSource={RelativeSource AncestorType={x:Type local:StoreReturns}}}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="Unchecked">
                                                <i:InvokeCommandAction Command="{Binding DataContext.ProductSelectCommand,RelativeSource={RelativeSource AncestorType={x:Type local:StoreReturns}}}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                        </ToggleButton>
                                        <StackPanel  Margin="8 5 0 0" Grid.Column="1">
                                            <TextBlock Text="SKU"  />
                                            <TextBlock Text="{Binding ProductSKU}" />
                                        </StackPanel>
                                        <StackPanel Margin="8 5 0 0" Grid.Column="2">
                                            <TextBlock Text="Product Name"  />
                                            <TextBlock Text="{Binding ProductName}" ToolTip="{Binding ProductName }" />
                                        </StackPanel>
                                        <StackPanel Margin="8 5 0 0" Grid.Column="3">
                                            <TextBlock Text="Brand" />
                                            <TextBlock Text="{Binding ManufactureName}" ToolTip="{Binding ManufactureName}" />
                                        </StackPanel>
                                        <StackPanel Margin="8 5 0 0" Grid.Column="4">
                                            <TextBlock Text="Invoice No" />
                                            <TextBlock Text="{Binding InvoiceNo}" />
                                        </StackPanel>
                                        <StackPanel Margin="8 5 0 0" Grid.Column="5">
                                            <TextBlock Text="LOT Number" />
                                            <TextBlock Text="{Binding Lotnumber}" />
                                        </StackPanel>
                                        <StackPanel Margin="8 5 0 0" Grid.Column="6">
                                            <TextBlock Text="Rate"  />
                                            <TextBlock Text="{Binding ProductRate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                        <StackPanel Margin="8 5 0 0" Grid.Column="7">
                                            <TextBlock Text="GST(%)" />
                                            <TextBlock Text="{Binding ProductGST}" />
                                        </StackPanel>
                                        <StackPanel Margin="8 5 0 0" Grid.Column="8">
                                            <TextBlock Text="Selling Price"  />
                                            <TextBlock Text="{Binding ProductSellingPrice}" />
                                        </StackPanel>
                                        <StackPanel Margin="8 5 0 0" Grid.Column="9">
                                            <TextBlock Text="Stock" />
                                            <TextBlock Text="{Binding ProductSubQty,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource MahApps.Brushes.Accent}" FontWeight="Bold" >

                                            </TextBlock>
                                        </StackPanel>
                                        <StackPanel  Margin="0 0 0 5" Grid.Column="10">
                                            <TextBox Text="{Binding ReturnQty,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  IsEnabled="True" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Return Qty">
                                                <i:Interaction.Behaviors>
                                                    <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                                                </i:Interaction.Behaviors>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="TextChanged">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.TexChangeQtyCommand,RelativeSource={RelativeSource AncestorType={x:Type local:EditProduct}}}" CommandParameter="{Binding}"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="KeyUp">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.TexChangeQtyCommand,RelativeSource={RelativeSource AncestorType={x:Type local:EditProduct}}}" CommandParameter="{Binding}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>

                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Grid.Column="11">
                                            <materialDesign:PackIcon  Width="20" Height="20"                         
                                Kind="Rupee"  VerticalAlignment="Center" Margin="0 4 0 0"
                                Style="{StaticResource IconMargin}"   /> 
                                            <TextBlock  FontSize="16" Margin="0 10 0 0" Text="{Binding RowTotal,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Foreground="#252572"></TextBlock>
                                        </StackPanel>
                                       
                                        <Button Grid.Column="12" Margin="0 -5 0 0 " VerticalAlignment="center"  Command="{Binding DataContext.RemovePurhcaseCommand, RelativeSource={RelativeSource AncestorType={x:Type local:EditProduct}}}"
                        CommandParameter="{Binding}" Style="{StaticResource MaterialDesignIconButton}" >
                                            <materialDesign:PackIcon Background="#9B9B9A"
                           Foreground="#FFFFFF"
                            Kind="Multiply" />
                                        </Button>
                                    </Grid>
                                </Border>

                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                    <Setter TargetName="Border"  Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>


            </Grid>
        </Grid>
    </StackPanel>
</UserControl>
