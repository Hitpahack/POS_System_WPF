<UserControl x:Class="FalcaPOS.Denomination.View.StoreDenominationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FalcaPOS.Denomination.View"
              xmlns:converter="clr-namespace:FalcaPOS.Common.Converters;assembly=FalcaPOS.Common"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             mc:Ignorable="d" 
               xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
              xmlns:prism="http://prismlibrary.com/"
              prism:ViewModelLocator.AutoWireViewModel="True"
               xmlns:sys="clr-namespace:System;assembly=mscorlib"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}" x:Key="HorizontalExpanderContentTextBlock">
            <Setter Property="Opacity" Value=".68"/>
            <Setter Property="Text" Value="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="VerticalExpanderContentTextBlock" BasedOn="{StaticResource HorizontalExpanderContentTextBlock}">
            <Setter Property="MaxWidth" Value="180"/>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="HorizontalDividerBorder">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Height" Value="1"/>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="VerticalDividerBorder" BasedOn="{StaticResource HorizontalDividerBorder}">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Width" Value="1"/>
        </Style>
        <Style x:Key="stylelabel" TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5 5 0 0"></Setter>
        </Style>
        <Style x:Key="IconMargin" TargetType="materialDesign:PackIcon">
            <Setter Property="Margin" Value="0,20,0,0" />
        </Style>
        <converter:ArrayToVisibilityConverter x:Key="Arraytovisible"></converter:ArrayToVisibilityConverter>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}}" />
          
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition  />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
       
        <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">

            <DatePicker  Width="160"
                        Margin="100 0 0 0"
                        DisplayDateEnd="{x:Static sys:DateTime.Today}"
                        materialDesign:HintAssist.IsFloating="True"
                        materialDesign:HintAssist.Hint="From Date" 
                        materialDesign:TextFieldAssist.HasClearButton="True" 
                        Text="{Binding FromDate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
            </DatePicker>
            <DatePicker  Width="160"
                        Margin="50 0 0 0"
                        DisplayDateEnd="{x:Static sys:DateTime.Today}"
                        materialDesign:HintAssist.IsFloating="True"
                        materialDesign:HintAssist.Hint="To Date" 
                        materialDesign:TextFieldAssist.HasClearButton="True" 
                        Text="{Binding ToDate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
            </DatePicker>
            <Button  Margin="30 10 20 0" 
                     Height="40" 
                     Width="120"  
                    Style="{DynamicResource RoundTextButton}"
                     Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:StoreDenominationView}}, 
                     Path=DataContext.FetchDenominationCommand}" 
                     CommandParameter="{Binding}">SEARCH</Button>
            <Button  
                Width="40" Height="35" 
                Margin="0,14,20,0" 
                Style="{DynamicResource RoundButton}" 
                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:StoreDenominationView}}, 
                     Path=DataContext.ResetDenominationCommand}"  
                     CommandParameter="{Binding}"  
                VerticalAlignment="Top">
                <Button.Content>
                    <materialDesign:PackIcon Kind="Refresh" />
                </Button.Content>
            </Button>
            <Button Grid.Column="1" 
                  Margin="0 14 20 0" 
                Style="{DynamicResource RoundButton }"
                ToolTip="Download XL File" 
                Height="30" Width="40"  
                IsEnabled="{Binding IsExportEnabled}" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:StoreDenominationView}}, Path=DataContext.DenominationStoreExportCommand}"  CommandParameter="{Binding}">
                <Button.Content>
                    <Image Width="17" Height="17" Source="{DynamicResource Grid_Download}"/>
                </Button.Content>
            </Button>
        </StackPanel>
       
            <!--<local:DenominationView Margin="0 10 0 10" Visibility="{Binding IsVisiblePage,Mode=TwoWay,Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Center"  DenominationModel="{Binding Path=DenominationModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" DataContext="{Binding Path=.,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></local:DenominationView>-->
        <telerik:RadGridView
            CanUserReorderColumns="False"  
            RowIndicatorVisibility="Collapsed"
            Margin="0 10 0 170"  Visibility="{Binding DenominationModel,Converter={StaticResource Arraytovisible},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                  IsReadOnly="True" Grid.Row="1" Grid.ColumnSpan="3" 
                  AutoGenerateColumns="False" 
            ShowGroupPanel="False"
                  ItemsSource="{Binding DenominationModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                  ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">

            <telerik:RadGridView.Columns>
                <telerik:GridViewDataColumn Width="*"  IsFilterable="True" IsGroupable="false"   Header="OnDate" DataMemberBinding="{Binding DenominationDate}"/>
                <telerik:GridViewDataColumn Width="*"  IsFilterable="True" IsGroupable="false" Header="Opening Cash" DataMemberBinding="{Binding OpeningCash}"/>
                <telerik:GridViewDataColumn Width="*"  IsFilterable="True" IsGroupable="false" Header="Cash Sale" DataMemberBinding="{Binding Cash}"/>
                <telerik:GridViewDataColumn Width="*"  IsFilterable="True" IsGroupable="false" Header="Cash Return" DataMemberBinding="{Binding SalesReturnCash}"/>
                <telerik:GridViewDataColumn Width="*"  IsFilterable="True" IsGroupable="false" Header="UPI Sale" DataMemberBinding="{Binding UPI}"/>
                <telerik:GridViewDataColumn Width="*"  IsFilterable="True" IsGroupable="false" Header="Total Sales" DataMemberBinding="{Binding TotalSales}"/>
                <telerik:GridViewDataColumn Width="*"  IsFilterable="True" IsGroupable="false" Header="Bank Deposit" DataMemberBinding="{Binding Deposit}"/>
                <telerik:GridViewDataColumn Width="*"  IsFilterable="True" IsGroupable="false" Header="Closing Cash" DataMemberBinding="{Binding ClosingCash}"/>

                <telerik:GridViewColumn Width="*" Header="">
                    <telerik:GridViewColumn.CellTemplate>
                        <DataTemplate>

                            <Button Margin="0 0 0 0" Width="50" Height="25" Style="{StaticResource MaterialDesignOutlinedButton}" ToolTip="Denomination View"  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:StoreDenominationView}}, Path=DataContext.NoteDetailsViewCommand}"  CommandParameter="{Binding}">
                                <Button.Content>
                                    <materialDesign:PackIcon Kind="Eye" />
                                </Button.Content>
                            </Button>
                        </DataTemplate>
                    </telerik:GridViewColumn.CellTemplate>
                </telerik:GridViewColumn>
            </telerik:RadGridView.Columns>
            </telerik:RadGridView>
       
    </Grid>
   

</UserControl>
