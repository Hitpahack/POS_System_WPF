<UserControl
    x:Class="FalcaPOS.AddInventory.Views.ProductCard"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behavior="clr-namespace:FalcaPOS.Common.Behaviors;assembly=FalcaPOS.Common"
    xmlns:converter="clr-namespace:FalcaPOS.AddInventory.Converters"
    xmlns:converters="clr-namespace:FalcaPOS.Common.Converters;assembly=FalcaPOS.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:FalcaPOS.AddInventory.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
     xmlns:UserControl="clr-namespace:FalcaPOS.AddInventory.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
     xmlns:sys="clr-namespace:System;assembly=mscorlib"
    x:Name="UxProduct"
    Margin="20,0,20,20"
    d:DesignHeight="450"
    d:DesignWidth="1500"
    DataContext="{Binding}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="MinWidth" Value="180" />
            <Setter Property="Margin" Value="5,0,5,0" />
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="MinWidth" Value="180" />
            <Setter Property="Margin" Value="5,0,5,0" />
        </Style>
        <Style BasedOn="{StaticResource MaterialDesignComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="MinWidth" Value="180" />
            <Setter Property="Margin" Value="5,0,5,0" />
        </Style>

        <Style x:Key="IconMargin" TargetType="materialDesign:PackIcon">
            <Setter Property="Margin" Value="5,10,5,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style
            x:Key="ChipsHeadline"
            BasedOn="{StaticResource MaterialDesignHeadline6TextBlock}"
            TargetType="TextBlock">
            <Setter Property="Margin" Value="0,16,0,16" />
        </Style>


        <converter:MultiConverter x:Key="MultiConvert" />
        <materialDesign:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel Grid.Column="1">
                <TextBox IsEnabled="False" materialDesign:HintAssist.Hint="ProductName" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectedProductSearch.ProductName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </StackPanel>
            <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center" Grid.Column="2">
                <TextBox IsEnabled="False" materialDesign:HintAssist.Hint="ProductSKU" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectedProductSearch.ProductSKU,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                   
                </TextBox>
               
                <!--<ComboBox 
                    Name="cmbProductSearchList"
                    Margin="0,0,0,0" VerticalAlignment="Center"
                    materialDesign:HintAssist.Hint="Product Name"
                     AutomationProperties.AutomationId="cmbAddInvtextId"
                    IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsEditable="{Binding IsEditDropDown, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsTextSearchEnabled="True"
                    ItemsSource="{Binding ProductsSearchList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedValue="{Binding SelectedProductSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ToolTip="{Binding SelectedProductSearch.ProductName}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{Binding ProductSKU}" ContentStringFormat="({0}) " />                               
                                <Label Content="{Binding ProductName}" />
                                --><!--<Label Content="{Binding Brand}" />
                                <Label Content="{Binding ProductType}" />
                                <Label Content="{Binding Category}" />--><!--
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <prism:InvokeCommandAction Command="{Binding SearchProductSelectionChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <TextBox Text="{Binding ElementName=cmbProductSearchList, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <prism:InvokeCommandAction Command="{Binding SearchTextChangedCommand}" CommandParameter="{Binding ElementName=cmbProductSearchList, Path=Text}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>-->
            </StackPanel>
            <StackPanel Grid.Column="3">
                <TextBox IsEnabled="False" materialDesign:HintAssist.Hint="Brand" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectedProductSearch.Brand,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </StackPanel>
            <StackPanel Grid.Column="4">
                <TextBox IsEnabled="False" materialDesign:HintAssist.Hint="Sub Category" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectedProductSearch.ProductType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </StackPanel>
            <StackPanel Grid.Column="5">
                <TextBox IsEnabled="False"  materialDesign:HintAssist.Hint="Category" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectedProductSearch.Category,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </StackPanel>
            <!--<TextBox Grid.Row="0" Grid.Column="3"
                    materialDesign:HintAssist.Hint="HSN Code *"
                    materialDesign:HintAssist.IsFloating="True"
                      AutomationProperties.AutomationId="txtAddInvHsnId"
                    MaxLength="12" VerticalAlignment="Center"
                    Text="{Binding HSN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
          
               



            <!--<TextBox  Grid.Row="0" Visibility="Collapsed"
                Grid.Column="6" VerticalAlignment="Center"               
                    materialDesign:HintAssist.Hint="Dept Code"
                       AutomationProperties.AutomationId="txtAddInvDeptId"
                    materialDesign:HintAssist.IsFloating="True"
                    IsReadOnly="True"
                    Text="{Binding SelectedProduct.ProductType.DeptCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->

          
               <!--<TextBox   Grid.Row="0"
                Grid.Column="5" VerticalAlignment="Center"
                Visibility="{Binding SelectedProduct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullableToVisibilityConverter}}"
                materialDesign:HintAssist.Hint="Product SKU *"
                           AutomationProperties.AutomationId="txtAddInvProductSkuId"
                    materialDesign:HintAssist.IsFloating="True"
                    IsReadOnly="True"
                    Text="{Binding SelectedProduct.ProductSKU, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->       

           
                <!--<RadioButton  Grid.Row="0"
                Grid.Column="7"
                Visibility="{Binding SelectedProduct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullableToVisibilityConverter}}"
                Width="120"
                    Content="{Binding SelectedProduct.InventoryTrackMode}"
                    IsChecked="True"
                    Style="{StaticResource MaterialDesignChoiceChipPrimaryRadioButton}"
                    ToolTip="Inventry Track Mode" />-->    

            
           
                <!--<TextBox
                    materialDesign:HintAssist.Hint="Sub Category *"  Grid.Row="1"
                Grid.Column="1"
                    materialDesign:HintAssist.IsFloating="True"
                     AutomationProperties.AutomationId="txtAddInvSubcatId"
                    IsReadOnly="True"
                    Text="{Binding SelectedProduct.ProductType.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
                <!--<ComboBox
                    materialDesign:HintAssist.Hint="Product type*"
                    materialDesign:HintAssist.IsFloating="True"
                    materialDesign:TextFieldAssist.HasClearButton="True"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding ProductTypes}"
                    SelectedValue="{Binding SelectedProductType}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <prism:InvokeCommandAction Command="{Binding ProductTypeChange}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>-->
        
           
                <!--<materialDesign:PackIcon
                    
                    Kind="BrandingWatermark"
                    Style="{StaticResource IconMargin}" />-->
                <!--<ComboBox
                    materialDesign:HintAssist.Hint="Brand *"
                    materialDesign:HintAssist.IsFloating="True"
                    materialDesign:TextFieldAssist.HasClearButton="True"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding Manufacturers}"
                    SelectedValue="{Binding SelectedManufacturer}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <prism:InvokeCommandAction Command="{Binding ManufacturerChange}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>-->
                <!--<TextBox
                    materialDesign:HintAssist.Hint="Brand *"   Grid.Row="1"
                Grid.Column="2"
                    materialDesign:HintAssist.IsFloating="True"
                     AutomationProperties.AutomationId="txtAddInvBrandId"
                    IsReadOnly="True"
                    Text="{Binding SelectedProduct.Manufacturer.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->

          
           
                <!--<materialDesign:PackIcon
                    
                    Kind="ChartProductionPossibilityFrontier"
                    Style="{StaticResource IconMargin}" />-->
                <!--<ComboBox
                    materialDesign:HintAssist.Hint="Product Name *"
                    materialDesign:HintAssist.IsFloating="True"
                    materialDesign:TextFieldAssist.HasClearButton="True"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding ProductDetailsList}"
                    SelectedValue="{Binding SelectedProduct}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <prism:InvokeCommandAction Command="{Binding SelectedProductChangeCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>-->

                <!--<TextBox
                    materialDesign:HintAssist.Hint="Product Name *"  Grid.Row="1"
                Grid.Column="3"
                    materialDesign:HintAssist.IsFloating="True"
                     AutomationProperties.AutomationId="txtAddInvProductNameId"
                    IsReadOnly="True"
                    Text="{Binding SelectedProduct.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->

         
          
                <!--<materialDesign:PackIcon
                    
                    Kind="Calendar"
                    Style="{StaticResource IconMargin}" />-->
              
            
            <ComboBox Grid.Row="1" Grid.Column="6"               
                    Margin="5,0,5,0"
                    Visibility="Collapsed"
                    materialDesign:HintAssist.Hint="Product Location *"
                    materialDesign:HintAssist.IsFloating="True"       
                       AutomationProperties.AutomationId="cmbAddInvProductLocId"
                    DisplayMemberPath="Name"              
                    ItemsSource="{Binding ProductLocations}"
                    SelectedValue="{Binding SelectedLocation}">
            </ComboBox>

            <!--<ComboBox   Grid.Row="1"
                Grid.Column="6"                  
                    Margin="10,0,0,0"
                    materialDesign:HintAssist.Hint="Warranty/Service *"
                    materialDesign:HintAssist.IsFloating="True" 
                         AutomationProperties.AutomationId="cmbAddInvWarrantyId"
                    DisplayMemberPath="Name"              
                    ItemsSource="{Binding WarrantyServices}"
                    SelectedValue="{Binding SelectedWarrantyService}">
            </ComboBox>-->
            <!--<TextBox
                Grid.Row="1"
                Grid.Column="6"
                materialDesign:HintAssist.Hint="Product Location *"
                materialDesign:HintAssist.IsFloating="True"
                Text="{Binding Path=Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
            <!--<TextBox
                Grid.Row="1"
                Grid.Column="7"
                materialDesign:HintAssist.Hint="Warranty/Service *"
                materialDesign:HintAssist.IsFloating="True"
                Text="{Binding WarrantyService}" />-->
            <StackPanel
        Grid.Row="0"
        Grid.Column="6"
        VerticalAlignment="Top"
        Orientation="Horizontal">
                <materialDesign:PackIcon
            Margin="0,20,0,0"
            
            Kind="Rupee" />
                <TextBox
            materialDesign:HintAssist.Hint="Net Total"
            materialDesign:HintAssist.IsFloating="True"
                 AutomationProperties.AutomationId="txtAddInvNetTotalId"
            IsEnabled="False"
            IsReadOnly="True"
            Text="{Binding ProductTTotalQuantityRate, Mode=TwoWay}" />
            </StackPanel>
            <StackPanel
        Grid.Row="0"
        Grid.Column="7"
        VerticalAlignment="Top"
        Orientation="Horizontal">
                <materialDesign:PackIcon
            Margin="0,20,0,0"
            
            Kind="Rupee" />
                <TextBox
            materialDesign:HintAssist.Hint="{Binding GstHeaderQty,Mode=TwoWay}"
            materialDesign:HintAssist.IsFloating="True"
                 AutomationProperties.AutomationId="txtAddInvGstHeaderQtyId"
            IsEnabled="False"
            IsReadOnly="True"
            Text="{Binding ProductGSTPerQuantity, Mode=TwoWay}" />
            </StackPanel>

            <StackPanel
        Grid.Row="0"
        Grid.Column="8"
        VerticalAlignment="Top"
        Orientation="Horizontal">
                <materialDesign:PackIcon
            Margin="0,20,0,0"
            
            Kind="Rupee" />
                <TextBox
            materialDesign:HintAssist.Hint="{Binding GstHeaderTotal,Mode=TwoWay}"
            materialDesign:HintAssist.IsFloating="True"
                 AutomationProperties.AutomationId="txtAddInvGstHeaderTotalId"
            IsEnabled="False"
            IsReadOnly="True"
            Text="{Binding ProductGSTTotal, Mode=TwoWay}" />
            </StackPanel>
            <StackPanel
        Grid.Row="0"
        Grid.Column="9"
        VerticalAlignment="Top"
        Orientation="Horizontal">
                <materialDesign:PackIcon
            Margin="0,20,0,0"
            
            Kind="Rupee" />
                <TextBox
            materialDesign:HintAssist.Hint="Gross Total"
            materialDesign:HintAssist.IsFloating="True"
                 AutomationProperties.AutomationId="txtAddInvGrossTotal1Id"
            IsEnabled="False"
            IsReadOnly="True"
            Text="{Binding ProductTotal, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
            <StackPanel Grid.Column="10">
                <TextBox Margin="10 0 0 0" 
            materialDesign:HintAssist.Hint="PO Qty"
            materialDesign:HintAssist.IsFloating="True"
                 AutomationProperties.AutomationId="txtAddInvGrossTotal1Id"
            IsEnabled="False"
            IsReadOnly="True"
            Text="{Binding PoQty, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

            </StackPanel>
        </Grid>

        <Grid
            Grid.Row="1"
            Grid.Column="0" 
            Grid.ColumnSpan="2"
            Margin="0,5,0,0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="8*" />
            </Grid.ColumnDefinitions>
            <StackPanel
                Grid.Column="0"
                Margin="0,-20,0,0"
                Orientation="Vertical"
               >
                <Button
                    Margin="0,5,5,0"
                    VerticalAlignment="Center"
                    Command="{Binding AddProductCardCommand, RelativeSource={RelativeSource AncestorType=UserControl}}">
                    <!--  Command="{Binding DataContext.RemoveProductCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:SalesView}}}"  -->
                    <Button.Template>
                        <ControlTemplate>
                            <materialDesign:PackIcon
                                Foreground="{StaticResource MahApps.Brushes.Accent}"
                                Kind="StarPlus"
                                ToolTip="Add Product" />
                        </ControlTemplate>
                    </Button.Template>

                </Button>

                <Button
                    Margin="0,5,5,0"
                    VerticalAlignment="Center"
                    Command="{Binding RemoveProductCardCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    CommandParameter="{Binding Path=ID}"  AutomationProperties.AutomationId="btnAddInvRmvId" >
                    <!--  Command="{Binding DataContext.RemoveProductCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:SalesView}}}"  -->
                    <Button.Template>
                        <ControlTemplate>
                            <materialDesign:PackIcon
                                Foreground="#ff3d3d"
                                Kind="Trash"
                                ToolTip="Remove" />
                        </ControlTemplate>
                    </Button.Template>

                </Button>
            </StackPanel>

            <Grid Grid.Column="1" Visibility="{Binding Path=SelectedProduct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullableToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>

                </Grid.RowDefinitions>
                <!--<Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />

                    </Grid.RowDefinitions>

                    --><!--<StackPanel
        Grid.Row="0"
        Grid.Column="0" 
        Orientation="Horizontal">
            <materialDesign:PackIcon
            Margin="0,20,0,0"
            
            Kind="Cart" />
            <TextBox
              
            materialDesign:HintAssist.Hint="Unit Qty"
            materialDesign:HintAssist.IsFloating="True"
                 AutomationProperties.AutomationId="txtAddInvUnitId"
            Text="{Binding ProductQty, Mode=TwoWay, UpdateSourceTrigger=LostFocus}">
                <i:Interaction.Behaviors>
                    <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                </i:Interaction.Behaviors>
            </TextBox>
        </StackPanel>
        <StackPanel
        Grid.Row="0" 
        Grid.Column="1"
      
       >
            <ComboBox
        
            materialDesign:HintAssist.Hint="Base Unit Type *"
            materialDesign:HintAssist.IsFloating="True"
            materialDesign:TextFieldAssist.HasClearButton="True"
                 AutomationProperties.AutomationId="txtAddInvBaseUnitId"
            ItemsSource="{Binding UnitTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectedValue="{Binding SelectedUnitType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding DataContext.SelectedUnitTypeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ProductCard}}}" CommandParameter="{Binding SelectedUnitType}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </StackPanel>--><!--
                </Grid>-->



                <!--<StackPanel
        Grid.Row="1"
        Grid.Column="0"
        VerticalAlignment="Top"
        Orientation="Horizontal">
    -->
                <!--<materialDesign:PackIcon
            
            Kind="QualityHigh"
            Style="{StaticResource IconMargin}" />-->
                <!--
        <TextBox
            materialDesign:HintAssist.Hint="Qty *"
            materialDesign:HintAssist.IsFloating="True"
            Text="{Binding ProductQty, Mode=TwoWay}">
            <i:Interaction.Behaviors>
                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
            </i:Interaction.Behaviors>
        </TextBox>
    </StackPanel>-->
                <Grid  Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition  Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel  Grid.Row="0" Grid.Column="0">
                        <TextBox
        Margin="10 0 0 0"
            materialDesign:HintAssist.Hint="Received Qty*"
            materialDesign:HintAssist.IsFloating="True"
             AutomationProperties.AutomationId="txtAddInvSubUnitId"
            Text="{Binding ProductSubQty, Mode=TwoWay}">
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                      
                    </StackPanel>
                    <StackPanel  Grid.Row="0"  Grid.Column="1" Margin="0 0 10 0"
        Visibility="{Binding IsGroupTrackMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBlock ToolTip="UOM" FontWeight="Bold" FontSize="13" Margin="5 15 0 0" Text="{Binding SelectedSubUnitType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                        <!--<ComboBox
            materialDesign:HintAssist.Hint="Sub Unit Type"
            materialDesign:HintAssist.IsFloating="True"
            materialDesign:TextFieldAssist.HasClearButton="True"
            ItemsSource="{Binding SubUnitTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectedValue="{Binding SelectedSubUnitType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding DataContext.SelectedSubUnitCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ProductCard}}}" CommandParameter="{Binding SelectedSubUnitType}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>-->
                    </StackPanel>
                    <StackPanel Grid.Row="0" Grid.Column="2">
                        <TextBox Text="{Binding DefectiveQty,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="Defective Qty">
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </StackPanel>
                    <StackPanel  Grid.Row="0" Grid.Column="3" VerticalAlignment="Top" HorizontalAlignment="Left">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
            Margin="0,20,0,0"      
            Kind="Rupee" />
                            <TextBox
            materialDesign:HintAssist.Hint="Rate*"
            materialDesign:HintAssist.IsFloating="True"
                 AutomationProperties.AutomationId="txtAddInvRateId"
            Text="{Binding ProductRate, Mode=TwoWay}">
                                <i:Interaction.Behaviors>
                                    <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </StackPanel>
                        
                      
                    </StackPanel>
                    <StackPanel IsEnabled="False" Visibility="{Binding IsDiscount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                VerticalAlignment="Top"  Grid.Column="4" Orientation="Horizontal">
                        <materialDesign:PackIcon  Margin="0,20,0,0"    Kind="Rupee" />
                        <TextBox
               MinWidth="70"
            IsReadOnly="True"
            materialDesign:HintAssist.Hint="{Binding DiscountHeader,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
            materialDesign:HintAssist.IsFloating="True"
                 AutomationProperties.AutomationId="txtAddInvDiscId"
            Text="{Binding Discount,Mode=TwoWay}">
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </StackPanel>
                    <StackPanel IsEnabled="False" Visibility="{Binding IsDiscount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"  Grid.Column="5"
        VerticalAlignment="Top"  Orientation="Horizontal">
                        <materialDesign:PackIcon Margin="0,20,0,0"     Kind="Rupee" />
                        <TextBox
           MinWidth="70"
            IsReadOnly="True"
            materialDesign:HintAssist.Hint="DiscountedRate"
            materialDesign:HintAssist.IsFloating="True"
                 AutomationProperties.AutomationId="txtAddInvDisRateId"
            Text="{Binding DiscountedRate,Mode=TwoWay}">
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </StackPanel>
                    
                    <StackPanel
        Grid.Row="1"
        Grid.Column="6"
        Margin="0 0 0 10"
        VerticalAlignment="Top"
        IsEnabled="{Binding IsInclusiveGst,Converter={StaticResource InvertedBooleanConverter},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"                
        Orientation="Horizontal">

                        <ComboBox
        materialDesign:HintAssist.Hint="{Binding GstHeaderPer,Mode=TwoWay}"
        materialDesign:HintAssist.IsFloating="True"  
                 AutomationProperties.AutomationId="txtAddInvGstHeaderId"
        DisplayMemberPath="Name"  
            Margin="5,0,5,0"
        ItemsSource="{Binding GSTslabs}"                      
        SelectedValue="{Binding SelectedGSTslab,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        </ComboBox>


                        <!--<materialDesign:PackIcon
            Margin="0,20,0,0"
            
            Kind="Percent" />
        <TextBox
            materialDesign:HintAssist.Hint="GST(%)"
            materialDesign:HintAssist.IsFloating="True"
            Text="{Binding ProductGST, Mode=TwoWay}">
            <i:Interaction.Behaviors>
                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
            </i:Interaction.Behaviors>
        </TextBox>-->
                    </StackPanel>
                    <StackPanel Grid.Row="0" Grid.Column="7">
                        <TextBox
     materialDesign:HintAssist.Hint="Lot/Serial No"  
      AutomationProperties.AutomationId="txtAddInvLotId"
  VerticalAlignment="Center"
     materialDesign:HintAssist.IsFloating="True"
     Text="{Binding Lotnumber, Mode=TwoWay}" />

                    </StackPanel>
                    <StackPanel Grid.Row="0" Grid.Column="8">
                        <DatePicker
                    Margin="5,0,0,0"  
                 
                    materialDesign:HintAssist.Hint="Manufacture Date*"
                    materialDesign:HintAssist.IsFloating="True"
                     AutomationProperties.AutomationId="dpAddInvManufactureId"
                    DisplayDateEnd="{x:Static sys:DateTime.Today}"
                    SelectedDate="{Binding DateOfManufacture}"
                    Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />


                    </StackPanel>
                    <StackPanel  Grid.Column="9">

                        <DatePicker  Grid.Row="0" Margin="10 0 0 0"
                                
                    materialDesign:HintAssist.Hint="Expiry Date  *"
                    materialDesign:HintAssist.IsFloating="True"
                          AutomationProperties.AutomationId="dpAddInvExpiryId"
                    DisplayDateStart="{Binding DateOfManufacture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedDate="{Binding DateOfExpiry}"
                    Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />
                    </StackPanel>

                </Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="100"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    
                   
                    <!--<StackPanel Orientation="Horizontal"  Margin="15 0 0 0" Grid.Column="1">
                        <materialDesign:PackIcon
            Margin="0,20,0,0"      
            Kind="Rupee" />
                        <TextBox Margin="0 0 0 0"
            materialDesign:HintAssist.Hint="PO Rate"
            materialDesign:HintAssist.IsFloating="True"
                 AutomationProperties.AutomationId="txtAddInvGrossTotal1Id"
            IsEnabled="False"
            IsReadOnly="True"
            Text="{Binding PoRate, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

                    </StackPanel>
                    <TextBox  IsEnabled="False"  Grid.Column="2" Margin="10 0 0 0" 
                              materialDesign:HintAssist.IsFloating="True"
                              materialDesign:HintAssist.Hint="PO GST(%)"
                              HorizontalAlignment="Left"
                              Visibility="{Binding IsInclusiveGst,Converter={StaticResource InverseBoolToVisConverter},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Text="{Binding PoGST,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>-->
                    <Label  Grid.ColumnSpan="9" VerticalContentAlignment="Top" HorizontalContentAlignment="Right" Foreground="Red" Margin="5 2 0 0" Visibility="{Binding IsInclusiveGst,Converter={StaticResource BooleanToVisibilityConverter},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">Note: All prices are inclusive of GST</Label>
                    <StackPanel Grid.Row="1" Grid.Column="10" VerticalAlignment="Top" Margin="-40 -10 0 0"
        Orientation="Horizontal">
                        <materialDesign:PackIcon Margin="0,20,0,0" Kind="Rupee" />
                        <TextBox VerticalContentAlignment="Top"
            materialDesign:HintAssist.Hint="MRP"
            materialDesign:HintAssist.IsFloating="True"
            AutomationProperties.AutomationId="txtAddInvMRPId"
            Text="{Binding ProductMRP, Mode=TwoWay}">
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </StackPanel>
                </Grid>
                <StackPanel
        Grid.Row="2"
        Grid.Column="0"
        Grid.ColumnSpan="4" Visibility="Collapsed"
        VerticalAlignment="Top"
        Orientation="Horizontal">

                    <!--<materialDesign:PackIcon
        
        Kind="QualityHigh"
        Style="{StaticResource IconMargin}" />-->
                    <Label Margin="5,20,0,0" FontWeight="Bold">Serial Number</Label>

                    <Label Margin="5,20,0,0">Auto</Label>
                    <ToggleButton
            x:Name="tbtnserialnumber"
            Margin="5,20,0,0"
            materialDesign:HintAssist.Hint="Serial No"
            materialDesign:HintAssist.IsFloating="True"
             AutomationProperties.AutomationId="tgltAddInvSerialNoId"
            Command="{Binding Path=GenerateSerialCommand}"
            CommandParameter="{Binding ElementName=tbtnserialnumber, Path=IsChecked}"
            IsChecked="{Binding IsSerialNumberManual, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Label Margin="5,20,0,0">Manual</Label>
                </StackPanel>
                <ListBox
        x:Name="RadioButtonGroupChoiceChip"
        Grid.Row="3"
        Grid.Column="0"
        Grid.ColumnSpan="6"
        Margin="10,20,0,0"
        VerticalAlignment="Top"
        ItemsSource="{Binding Path=SerialNoList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        Style="{DynamicResource MaterialDesignChoiceChipListBox}"
         AutomationProperties.AutomationId="lstAddInvRadiobtnId"
        Visibility="{Binding ElementName=tbtnserialnumber, Path=IsChecked, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBox Width="100" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>
            </Grid>
        </Grid>
       
        <Line
            Grid.Row="3"
            Grid.ColumnSpan="2"
            Margin="0,10,0,0"
            HorizontalAlignment="Stretch"
            Stroke="Teal"
            StrokeDashArray="2 2"
            StrokeThickness="1.5"
            X2="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
    </Grid>
</UserControl>
