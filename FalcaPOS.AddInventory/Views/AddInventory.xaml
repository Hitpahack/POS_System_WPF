<UserControl
    x:Class="FalcaPOS.AddInventory.Views.AddInventory"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:GlobalConverter="clr-namespace:FalcaPOS.Common.Converters;assembly=FalcaPOS.Common"
    xmlns:UserControl="clr-namespace:FalcaPOS.AddInventory.Views"
    xmlns:behavior="clr-namespace:FalcaPOS.Common.Behaviors;assembly=FalcaPOS.Common"
    xmlns:converter="clr-namespace:FalcaPOS.AddInventory.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="1000"
    d:DesignWidth="1200"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <GlobalConverter:InverseBooleanToVisibilityConverter x:Key="InverseBooleanVisConverter" />
        <GlobalConverter:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <GlobalConverter:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />


        <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="Width" Value="160" />
            <Setter Property="Margin" Value="5,0,0,10" />
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Width" Value="160" />
            <Setter Property="Margin" Value="5,0,0,20" />
        </Style>
        <Style BasedOn="{StaticResource MaterialDesignComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="Width" Value="140" />
            <Setter Property="Margin" Value="5,0,0,20" />
        </Style>

        <Style x:Key="IconMargin" TargetType="materialDesign:PackIcon">
            <Setter Property="Margin" Value="0,20,0,0" />
        </Style>
        <converter:MultiConverter x:Key="MultiConvert" />
        <GlobalConverter:ArrayToVisibilityInverseConverter x:Key="ArrayToVisibilityInverseConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="0" />
            <RowDefinition Height="5*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="5" />
        </Grid.RowDefinitions>     

        <StackPanel Orientation="Horizontal"  Margin="0 20 0 0"  Grid.Row="0"
            Grid.Column="0"
            HorizontalAlignment="Left"
            >
            <materialDesign:PackIcon
                    
                    Kind="Account"
                    Style="{StaticResource IconMargin}" />

            <ComboBox
                x:Name="supplier"
                    materialDesign:HintAssist.Hint="Supplier Name *"
                    materialDesign:HintAssist.IsFloating="True"
                    materialDesign:TextFieldAssist.HasClearButton="True"
                    AutomationProperties.AutomationId="cmbInventoryAddSupplierNameId"                  
                    ItemsSource="{Binding Suppliers}"
                    SelectedItem="{Binding SelectedSupplier,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                    >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding DataContext.SupplierSelectionChangeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl:AddInventory}}}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
               </i:Interaction.Triggers>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{Binding Name}"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <ContentControl prism:RegionManager.RegionName="AddSupplier" />
            <StackPanel>
                <TextBox Width="120" IsEnabled="False" Margin="10 0 0 0" Text="{Binding SelectedSupplier.Address.State}"  materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="State" ></TextBox>
            </StackPanel>
           
            <StackPanel Orientation="Horizontal" Margin="10 0 0 0">
                <materialDesign:PackIcon
                    
                    Kind="FormatIndentIncrease"
                   
                    Style="{StaticResource IconMargin}" />

                <ComboBox
                   VerticalAlignment="Center"
                    materialDesign:HintAssist.Hint="PO Number *"
                    materialDesign:HintAssist.IsFloating="True"
                    materialDesign:TextFieldAssist.HasClearButton="True"
                    AutomationProperties.AutomationId="cmbInventoryAddPONumberId"
                    ItemsSource="{Binding IndentviewList}"
                    DisplayMemberPath="PoNumber"
                    SelectedValue="{Binding SelectedIndent,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding DataContext.IndentSelectionChangeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl:AddInventory}}}" CommandParameter="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Button
                Margin="5"
                   
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                AutomationProperties.AutomationId="btnInventoryIndentRefreshId"
                Command="{Binding RefreshIndentCommand}"
                Style="{StaticResource MaterialDesignFlatButton}"
                ToolTip="Refresh Indent">
                    <Button.Content>
                        <materialDesign:PackIcon Kind="Refresh" />
                    </Button.Content>
                </Button>
            </StackPanel>
           
          
        </StackPanel>
        <StackPanel           
           Grid.Column="0"
            HorizontalAlignment="Right"
            VerticalAlignment="Center" 
            Grid.Row="0"
            Orientation="Horizontal">

            <StackPanel Margin="20,0,20,0" Orientation="Horizontal"  Visibility="Collapsed">
                <TextBlock VerticalAlignment="Center" FontSize="16">NEW PRODUCT</TextBlock>
                <ContentControl prism:RegionManager.RegionName="AddProduct" />
            </StackPanel>
            <StackPanel Margin="20,0,20,0" Orientation="Horizontal"  Visibility="Collapsed">
                <TextBlock
                    VerticalAlignment="Center"
                    FontSize="16"
                    Style="{DynamicResource MaterialDesignSubtitle1TextBlock}">
                    BRAND
                </TextBlock>
                <ContentControl prism:RegionManager.RegionName="AddBrand" />
            </StackPanel>
            <StackPanel Margin="20,0,20,0" Orientation="Horizontal"  Visibility="Collapsed">
                <TextBlock VerticalAlignment="Center" FontSize="16">Sub Category</TextBlock>
                <ContentControl prism:RegionManager.RegionName="AddProductType" />
            </StackPanel>
            <StackPanel Margin="20,0,20,0" Orientation="Horizontal">

                <Button
                     Width="38" Height="38" 
                    Margin="10,0,20,0"
                    AutomationProperties.AutomationId="btnAddInventoryResetStockId"
                    Command="{Binding RestStockProductCommand}"                   
                    Style="{StaticResource RoundButton}">
                    <Button.Content>
                        <materialDesign:PackIcon Kind="Refresh" />
                    </Button.Content>
                </Button>


                <Button
                    Width="120"
                    AutomationProperties.AutomationId="btnAddInventoryAddToStockId"
                    Command="{Binding AddStockProductCommand}"
                    CommandParameter="{Binding ElementName=productCardControl}"
                    Content="Add to Stock"
                    Style="{StaticResource RoundTextButton}" />
               

            </StackPanel>
            
        </StackPanel>
        <StackPanel Margin="10 0 0 0" Visibility="Collapsed" Orientation="Horizontal" Grid.Row="1" >
            <TextBlock FontSize="13"  Margin="10 0 0 0"   Text="Branch : "></TextBlock>
            <TextBlock FontSize="12"  Margin="10 0 0 0" Visibility="{Binding IshippingAddress,Mode=TwoWay,Converter={StaticResource BooleanToVisibilityConverter}}" Text="{Binding SelectedAddress.Phone}"></TextBlock>
            <TextBlock FontSize="12" Margin="10 0 0 0" Visibility="{Binding IshippingAddress,Mode=TwoWay,Converter={StaticResource BooleanToVisibilityConverter}}" Text="{Binding SelectedAddress.Email}"></TextBlock>
            <TextBlock FontSize="12" Margin="10 0 0 0" Visibility="{Binding IshippingAddress,Mode=TwoWay,Converter={StaticResource BooleanToVisibilityConverter}}" Text="{Binding SelectedAddress.District}"></TextBlock>
            <TextBlock FontSize="12" Margin="10 0 0 0" Visibility="{Binding IshippingAddress,Mode=TwoWay,Converter={StaticResource BooleanToVisibilityConverter}}" Text="{Binding SelectedAddress.State}"></TextBlock>
            <TextBlock FontSize="12" Margin="0 0 0 0"   Visibility="{Binding IshippingAddress,Mode=TwoWay,Converter={StaticResource BooleanToVisibilityConverter}}" Text="-"/>
            <TextBlock FontSize="12" Visibility="{Binding IshippingAddress,Mode=TwoWay,Converter={StaticResource BooleanToVisibilityConverter}}" Text="{Binding SelectedAddress.Pincode}"></TextBlock>
            <TextBlock Text="{Binding NoShippingAddress,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBlock>
        </StackPanel>
        
        <Border
            Grid.Row="2"
            Grid.ColumnSpan="2"
            BorderBrush="#252572"
            BorderThickness="0,0,0,1" />

        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="8*"/>
            </Grid.ColumnDefinitions>
            <StackPanel
            Grid.Column="0"
            Margin="10,0,0,0">

                <StackPanel>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                    </Grid>

                    <StackPanel
                    Grid.Row="0"
                    Margin="0,10,0,0"
                    Orientation="Horizontal">
                        <RadioButton
                        Margin="0,0,10,0"
                        AutomationProperties.AutomationId="rbAddInventoryInvoiceNumberId"
                        Content="Invoice"
                        GroupName="dcnumber"
                        IsChecked="{Binding IsDcNumber, Converter={StaticResource InverseBooleanConverter}}" />
                        <RadioButton
                        AutomationProperties.AutomationId="rbAddInventoryDcNumberId"
                        Content="DC number"
                        GroupName="dcnumber"
                        IsChecked="{Binding IsDcNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel Visibility="{Binding IsDcNumber, Converter={StaticResource InverseBooleanVisConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                            Foreground="{Binding ElementName=txtinvoiceno, Path=BorderBrush}"
                            Kind="Numbers"
                            Style="{StaticResource IconMargin}" />
                            <TextBox
                            x:Name="txtinvoiceno"
                            materialDesign:HintAssist.Hint="Invoice No *"
                            materialDesign:HintAssist.IsFloating="True"
                            AutomationProperties.AutomationId="txtAddInventoryInvoiceNumberId"
                            Text="{Binding InvoiceNumber}" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                            
                            Kind="Calendar"
                            Style="{StaticResource IconMargin}" />
                            <DatePicker
                            Width="160"
                            Margin="5,0,0,20"
                            materialDesign:HintAssist.Hint="Invoice Date *"
                            materialDesign:HintAssist.IsFloating="True"
                            AutomationProperties.AutomationId="dpAddInventoryInvoiceDateId"
                            DisplayDateEnd="{x:Static sys:DateTime.Today}"
                            SelectedDate="{Binding InvoiceDate}"
                            Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Visibility="{Binding IsDcNumber, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                            Foreground="{Binding ElementName=dcn, Path=BorderBrush}"
                            Kind="Numbers"
                            Style="{StaticResource IconMargin}" />
                            <TextBox
                            x:Name="dcn"
                            materialDesign:HintAssist.Hint="DC number *"
                            materialDesign:HintAssist.IsFloating="True"
                            AutomationProperties.AutomationId="txtAddInventoryDCNumberId"
                            Text="{Binding DcNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                            Foreground="{Binding ElementName=dcd, Path=BorderBrush}"
                            Kind="Calendar"
                            Style="{StaticResource IconMargin}" />
                            <DatePicker
                            Width="160"
                            Margin="5,0,0,20"
                            materialDesign:HintAssist.Hint="DC Date *"
                            materialDesign:HintAssist.IsFloating="True"
                            AutomationProperties.AutomationId="dpAddInventoryDCDateId"
                            DisplayDateEnd="{x:Static sys:DateTime.Today}"
                            SelectedDate="{Binding DcNumberDate}"
                            Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />
                        </StackPanel>
                    </StackPanel>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon
                        
                        Kind="QualityHigh"
                        Style="{StaticResource IconMargin}" />
                        <TextBox
                        Width="70"
                        materialDesign:HintAssist.Hint="Qty*"
                        materialDesign:HintAssist.IsFloating="True"
                        AutomationProperties.AutomationId="txtAddInventoryQtyId"
                        Text="{Binding Quantity}">
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="Collapsed">
                        <materialDesign:PackIcon
                       
                        Kind="Iobroker"
                        Style="{StaticResource IconMargin}" />
                        <TextBox
                        x:Name="defective"
                        Width="70"
                        materialDesign:HintAssist.Hint="Defective Qty"
                        materialDesign:HintAssist.IsFloating="True"
                        AutomationProperties.AutomationId="txtAddInventoryDefectiveQtyId"
                        Text="{Binding DefectiveQuantity}">
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                            </i:Interaction.Behaviors>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="KeyUp">
                                    <i:InvokeCommandAction Command="{Binding DataContext.defectiveQtyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl:AddInventory}}}" CommandParameter="{Binding ElementName=defective}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon
                        
                        Kind="Rupee"
                        Style="{StaticResource IconMargin}" />
                        <TextBox
                        Width="70"
                        materialDesign:HintAssist.Hint="Net Total*"
                        materialDesign:HintAssist.IsFloating="True"
                        AutomationProperties.AutomationId="txtAddInventoryNetTotalId"
                        Text="{Binding InvoiceTotal, Mode=TwoWay}" />
                    </StackPanel>


                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon
                        
                        Kind="Rupee"
                        Style="{StaticResource IconMargin}" />
                        <TextBox
                        Width="70"
                        materialDesign:HintAssist.Hint="{Binding GstHeader,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                        materialDesign:HintAssist.IsFloating="True"
                        AutomationProperties.AutomationId="txtAddInventoryTotalGSTId"
                        Text="{Binding TotalGST, Mode=TwoWay}">

                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Margin="0,3,0,0" Content="Invoice Discount" FontWeight="Bold" />

                    <TextBlock Margin="2 7 0 0" Text="NO"></TextBlock>
                    <ToggleButton  x:Name="tbtndiscount"  AutomationProperties.AutomationId="tglAddInvId" IsChecked="{Binding IsInvoiceNotoggle,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Command="{Binding Path=DiscountbtnToggleCommand}" CommandParameter="{Binding Path=IsChecked ,RelativeSource={RelativeSource Mode=Self}}" Margin="8 2 0 0"></ToggleButton>
                    <TextBlock Margin="5 6 0 0" Foreground="{StaticResource MahApps.Brushes.Accent}" Text="YES"></TextBlock>
                </StackPanel>

                <Grid Margin="0,5,0,0" Visibility="{Binding Path=IsChecked,ElementName=tbtndiscount,Converter={StaticResource BooleanToVisibilityConverter}}" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="6*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Margin="5,0,0,0" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="0" Grid.Column="0">
                            <Label  >
                                <Label.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Margin="0,3,0,0" ToolTip="Should GST be applied on Rate before or after discounted price" Kind="InfoCircleOutline"/>
                                        <Label Content="Applied On" />
                                    </StackPanel>
                                </Label.Content>
                            </Label>
                        </StackPanel>

                        <StackPanel Width="80"  Grid.Row="0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                            Grid.Column="1">
                            <ComboBox 
                            Margin="10,2,0,0"
                            ItemsSource="{Binding DiscountApplyTypes,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                            SelectedValue="{Binding SelectedDiscountApplyType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            </ComboBox>
                        </StackPanel>

                    </Grid>
                </Grid>
                <StackPanel Orientation="Horizontal" Visibility="{Binding Path=IsChecked,ElementName=tbtndiscount,Converter={StaticResource BooleanToVisibilityConverter}}">

                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon
                        
                        Kind="Percent"
                        Style="{StaticResource IconMargin}" />
                        <TextBox
                        Width="70" 
                        x:Name="discountpercent"
                        materialDesign:HintAssist.Hint="Percentage"
                        materialDesign:HintAssist.IsFloating="True"
                        AutomationProperties.AutomationId="txtAddInventoryDiscountPercentId"
                        Text="{Binding InvoiceDiscountPerecent, Mode=TwoWay,UpdateSourceTrigger=LostFocus}">

                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                            </i:Interaction.Behaviors>
                            <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyUp">
                                <i:InvokeCommandAction Command="{Binding DataContext.DiscountPercentCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl:AddInventory}}}" CommandParameter="{Binding ElementName=discountpercent}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->
                        </TextBox>
                    </StackPanel>
                    <Label
                    Margin="0,20,5,0"
                    Content="OR"
                    FontWeight="Bold" />

                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon
                        
                        Kind="FormatListNumbers"
                        Style="{StaticResource IconMargin}" />
                        <TextBox
                        Width="45"
                        x:Name="discoutflat"
                        materialDesign:HintAssist.Hint="Flat"
                        materialDesign:HintAssist.IsFloating="True"
                        AutomationProperties.AutomationId="txtAddInventoryDiscountFlatId"
                        Text="{Binding InvoiceDiscountFlat, Mode=TwoWay,UpdateSourceTrigger=LostFocus}">

                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                            </i:Interaction.Behaviors>
                            <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyUp">
                                <i:InvokeCommandAction Command="{Binding DataContext.DiscountFlatCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl:AddInventory}}}" CommandParameter="{Binding ElementName=discoutflat}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->
                        </TextBox>
                    </StackPanel>

                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding Path=IsChecked,ElementName=tbtndiscount,Converter={StaticResource BooleanToVisibilityConverter}}">
                    <materialDesign:PackIcon
                    
                    Kind="Rupee"
                    Style="{StaticResource IconMargin}" />
                    <TextBox
                    materialDesign:HintAssist.Hint="Discount"
                    materialDesign:HintAssist.IsFloating="True"
                    AutomationProperties.AutomationId="txtAddInventoryDiscountId"
                    IsEnabled="False"
                    Text="{Binding InvoiceDiscount}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon
                        
                        Kind="Rupee"
                        Style="{StaticResource IconMargin}" />
                        <TextBox
                        Width="70"
                        materialDesign:HintAssist.Hint="Roundoff"
                        materialDesign:HintAssist.IsFloating="True"
                        AutomationProperties.AutomationId="txtAddInventoryRoundOffId"
                        Text="{Binding InvoiceRoundOff, Mode=TwoWay}">

                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                            </i:Interaction.Behaviors>
                        </TextBox>


                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon
                        
                        Kind="Rupee"
                        Style="{StaticResource IconMargin}" />
                        <TextBox
                        Width="75"
                        materialDesign:HintAssist.Hint="Other Charges"
                        materialDesign:HintAssist.IsFloating="True"
                        AutomationProperties.AutomationId="txtAddInventoryOtherChargesId"
                        Text="{Binding InvoiceOthers, Mode=TwoWay}">

                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                            </i:Interaction.Behaviors>
                        </TextBox>

                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon                    
                    Kind="Rupee"
                    Style="{StaticResource IconMargin}" />
                    <TextBox Width="75"
                    materialDesign:HintAssist.Hint="Transport Charges"
                    materialDesign:HintAssist.IsFloating="True"
                         ToolTip="Transport Charges"
                    AutomationProperties.AutomationId="txtAddInventoryTransportChargesId"
                    Text="{Binding TransportCharges, Mode=TwoWay}">
                        <i:Interaction.Behaviors>
                            <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                        </i:Interaction.Behaviors>
                    </TextBox>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon                    
                    Kind="Rupee"
                    Style="{StaticResource IconMargin}" />
                        <TextBox Width="70"
                    materialDesign:HintAssist.Hint="Gross Total"
                    materialDesign:HintAssist.IsFloating="True"
                    AutomationProperties.AutomationId="txtAddInventoryGrossTotalId"
                    IsReadOnly="True"
                    Text="{Binding InvoiceRate, Mode=TwoWay}">
                            <i:Interaction.Behaviors>
                                <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9.\-]+$" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </StackPanel>
                </StackPanel>




                <!--<StackPanel Orientation="Horizontal">
                <materialDesign:PackIcon
                    
                    Kind="Store"
                    Style="{StaticResource IconMargin}" />
                <ComboBox
                    Width="160"
                    materialDesign:HintAssist.Hint="Store *"
                    materialDesign:HintAssist.IsFloating="True"
                    materialDesign:TextFieldAssist.HasClearButton="True"
                    AutomationProperties.AutomationId="cmbAddInvStoresId"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding Stores}"
                    SelectedValue="{Binding SelectedStore}" />
            </StackPanel>-->


                <!--<StackPanel Orientation="Horizontal">

                <materialDesign:PackIcon
                    
                    Kind="QualityHigh"
                    Style="{StaticResource IconMargin}" />
                <Label Margin="5,20,0,0" FontWeight="Bold">QA Done</Label>

                <Label Margin="5,20,0,0">No</Label>
                <ToggleButton
                    Margin="5,20,0,0"
                    materialDesign:HintAssist.Hint="Serial No"
                    materialDesign:HintAssist.IsFloating="True"
                    AutomationProperties.AutomationId="tglbtnAddInvIsQADoneId"
                    IsChecked="{Binding IsQADone}" />
                <Label Margin="5,20,0,0">Yes</Label>
            </StackPanel>-->

                <StackPanel Margin="0,5,0,0" HorizontalAlignment="Left" Orientation="Horizontal">

                    <Button HorizontalAlignment="Right" AutomationProperties.AutomationId="btnFileAttachId" HorizontalContentAlignment="Right" Command="{Binding AddFileOpenDialogCommand}" Style="{StaticResource MaterialDesignToolForegroundButton}">
                        <Button.Content>
                            <materialDesign:PackIcon
                        Width="24"
                        Height="24"
                        Kind="AttachFile" />
                        </Button.Content>
                    </Button>
                    <Label FontSize="12"  AutomationProperties.AutomationId="lblAddInventoryAttachId" VerticalAlignment="Center" Content="ADD INVOICE ATTACHMENT"></Label>
                </StackPanel>
                <StackPanel>
                    <ItemsControl ItemsSource="{Binding FileUploadListInfo}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:Card
                                materialDesign:ShadowAssist.ShadowDepth="Depth1"
                                Height="60" Margin="0 0 0 5" Padding="5"                                
                                >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"></ColumnDefinition>
                                            <ColumnDefinition Width="8*"></ColumnDefinition>
                                            <ColumnDefinition Width="1*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>

                                        <Image Source="{DynamicResource fileicon}" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"></Image>

                                        <Label  Grid.Column="1"                                  
                                   
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Content="{Binding FileName}"
                                    ToolTip="{Binding FileName}" />

                                        <Label Grid.Column="1" Grid.Row="1"
                                        VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Content="{Binding Path=Size}"
                                    ToolTip="{Binding Path=Size}" />


                                        <Button Grid.Column="2" Grid.Row="0" Grid.RowSpan="2"
                                    HorizontalAlignment="Right"
                                    Foreground="Red"       
                                    Command="{Binding DataContext.DeleteUploadFileCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl:AddInventory}}}"
                                    CommandParameter="{Binding FileId}"
                                    Style="{StaticResource MaterialDesignToolForegroundButton}">
                                            <materialDesign:PackIcon Kind="Trash" ToolTip="Remove" />
                                        </Button>


                                    </Grid>
                                </materialDesign:Card>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>

            </StackPanel>


            <ScrollViewer
            Grid.Column="1"
            Height="700"
            MinHeight="200"
            ScrollViewer.CanContentScroll="True"
            ScrollViewer.VerticalScrollBarVisibility="Visible">

                <Grid>

                    <Button
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    AutomationProperties.AutomationId="btnAddInventoryAddProductCardsId"
                    Command="{Binding Path=AddProductCardCommand}"
                    Height="50"
                        Width="50"
                    Style="{StaticResource ActionButton}"
                    ToolTip="Add Product"
                    Visibility="{Binding Path=ProductCards, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ArrayToVisibilityInverseConverter}}">
                        <materialDesign:PackIcon
                        Width="24"
                        Height="24"
                        Kind="Plus" />
                    </Button>
                    <ItemsControl
                    x:Name="productCardControl"
                    Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ScrollBar}}, Path=ActualHeight}"
                    Margin="0,10,0,120"
                    ItemsSource="{Binding Path=ProductCards, Mode=TwoWay}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <UserControl:ProductCard
                                AddProductCardCommand="{Binding DataContext.AddProductCardCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                DataContext="{Binding Path=., Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                RemoveProductCardCommand="{Binding DataContext.RemoveProductCardCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                    </ItemsControl>

                </Grid>


            </ScrollViewer>
        </Grid>
    </Grid>

      
</UserControl>
