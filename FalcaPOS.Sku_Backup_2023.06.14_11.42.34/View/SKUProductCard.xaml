<UserControl x:Class="FalcaPOS.Sku.View.SKUProductCard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FalcaPOS.Sku.View"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
              xmlns:behavior="clr-namespace:FalcaPOS.Common.Behaviors;assembly=FalcaPOS.Common"
              xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:prism="http://prismlibrary.com/"
              DataContext="{Binding}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="IconMargin" TargetType="materialDesign:PackIcon">
            <Setter Property="Margin" Value="0,20,5,0" />
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Badged.Background}"></Setter>
        </Style>
    </UserControl.Resources>
    <Border
        x:Name="ProductCardBorder"
        Background="Transparent"
        BorderBrush="Transparent"
        BorderThickness="1"
        CornerRadius="4">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition/>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition Width="0.7*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Visibility="{Binding ValidtxtBoxVisibility,Converter={StaticResource BooleanToVisibilityConverter}}">
                <materialDesign:PackIcon
                                          
                                            Kind="FormatListNumbered"
                                            Style="{StaticResource IconMargin}" />
                <TextBox
    
                Width="180"
              
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Serial Number *"
                materialDesign:HintAssist.IsFloating="True"
               
                Style="{StaticResource MaterialDesignTextBox}"
                Text="{Binding SerailNumber}" >
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxInputRegExBehaviour EmptyValue="0" RegularExpression="^[0-9]*$" />
                    </i:Interaction.Behaviors>
                </TextBox>
            </StackPanel>
            <StackPanel   Grid.Row="0"
                Grid.Column="1" Orientation="Horizontal" >
                <materialDesign:PackIcon
                                          
                                            Kind="Shopping"
                                            Style="{StaticResource IconMargin}" />
                <TextBox  Width="100"
               VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="ProductName *"
                materialDesign:HintAssist.IsFloating="True"      
                Style="{StaticResource MaterialDesignTextBox}"
                Text="{Binding ProductName}" />

            </StackPanel>
            <StackPanel  Grid.Row="0"
                Grid.Column="2" Orientation="Horizontal">
                <materialDesign:PackIcon
                                          
                                            Kind="ImageDescription"
                                            Style="{StaticResource IconMargin}" />
                <TextBox
               Margin="0 0 0 0"
               Width="100"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Description *"
                materialDesign:HintAssist.IsFloating="True"
               
                Style="{StaticResource MaterialDesignTextBox}"
                Text="{Binding Description}" />

            </StackPanel>
            <StackPanel  Margin="0 0 0 0" Grid.Row="0"
                Grid.Column="3" Orientation="Horizontal">
                <materialDesign:PackIcon
                                          Kind="Weight"
                                          Style="{StaticResource IconMargin}" />
                <ComboBox  Width="180" VerticalAlignment="Center"
                             materialDesign:HintAssist.Hint="Sub Unit type *"
                    materialDesign:HintAssist.IsFloating="True"
                    materialDesign:TextFieldAssist.HasClearButton="True"
                           ItemsSource="{Binding SubUnitTypes}"
                           SelectedValue="{Binding SelectedSubUnitType}"
                           >
                  
                </ComboBox>

            </StackPanel>
            <StackPanel Visibility="{Binding ValidtxtBoxVisibility,Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 0 0"  Grid.Column="4" VerticalAlignment="Center" Orientation="Horizontal">
                <materialDesign:PackIcon Height="20" Width="20"  Kind="License" Margin="0 10 0 0" Foreground="{DynamicResource MahApps.Brushes.Badged.Background}"></materialDesign:PackIcon>
                <TextBox Margin="5 0 0  0" VerticalAlignment="Center" Width="120" materialDesign:HintAssist.IsFloating="True" materialDesign:HintAssist.Hint="License No *" Text="{Binding License}"></TextBox>
            </StackPanel>
            <StackPanel Visibility="{Binding ValidtxtBoxVisibility,Converter={StaticResource BooleanToVisibilityConverter}}"  Grid.Row="0" Margin="10 0 0 0"
                Grid.Column="5" Grid.ColumnSpan="2" Orientation="Horizontal">
                <DatePicker Margin="5 0 0 0"  DisplayDateStart="{x:Static sys:DateTime.Today}" Visibility="{Binding ValidUptodatePikerVisibility,Converter={StaticResource BooleanToVisibilityConverter}}"  materialDesign:HintAssist.Hint="Valid Upto*"
                    materialDesign:HintAssist.IsFloating="True" Width="120" SelectedDate="{Binding ValidupTo}"></DatePicker>

                <Label Visibility="{Binding LifeTimeBoxVisibility,Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" Margin="10 20 0 5">OR</Label>
                <CheckBox Visibility="{Binding LifeTimeBoxVisibility,Converter={StaticResource BooleanToVisibilityConverter}}" Margin="10 20 0 5" VerticalAlignment="Center" IsChecked="{Binding LifeTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">LIFE TIME</CheckBox>
            </StackPanel>
            <StackPanel
                Grid.Row="0"
                Grid.Column="7"
                Margin="10,10,0,0">
                <StackPanel Orientation="Horizontal">
                    <Button
                        Width="30"
                        Height="30"
                        Margin="0,0,10,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="btnAddInvAddIndentProductCardsId"
                        Command="{Binding AddSKUProductCardCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        Style="{StaticResource ActionButton}"
                        ToolTip="Add Product">
                        <materialDesign:PackIcon Kind="Plus" />
                    </Button>
                    <Button Margin="5 0 0 0 "
                        Width="30"
                        Height="30"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        AutomationProperties.AutomationId="btnAddInvAddIndentProductCardsId"
                        Background="Transparent"
                        Command="{Binding RemoveSKUProductCardCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding Path=SKUProductGUIDId}"
                        Style="{StaticResource MaterialDesignFloatingActionButton}"
                        ToolTip="Remove Product">
                        <materialDesign:PackIcon
                            Background="Transparent"
                            Foreground="red"
                            Kind="Trash" />
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Border.Style>
            <Style>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=HasError}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard x:Name="hasErrorTrue">
                                <Storyboard>
                                    <ColorAnimation
                                        AutoReverse="True"
                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                        From="Transparent"
                                        To="Red"
                                        Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <RemoveStoryboard BeginStoryboardName="hasErrorTrue" />
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                    <!--<DataTrigger Binding="{Binding Path=HasError}" Value="False">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard x:Name="hasErrorFalse">
                                <Storyboard>
                                    <ColorAnimation
                                        AutoReverse="True"
                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                        From="Transparent"
                                        To="Red"
                                        Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <RemoveStoryboard BeginStoryboardName="hasErrorFalse" />
                        </DataTrigger.ExitActions>
                    </DataTrigger>-->
                    <EventTrigger RoutedEvent="Border.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                    From="-100"
                                    To="0"
                                    Duration="0:0:1">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude="0.8" EasingMode="EaseInOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>



                </Style.Triggers>
            </Style>
        </Border.Style>

    </Border>
</UserControl>
