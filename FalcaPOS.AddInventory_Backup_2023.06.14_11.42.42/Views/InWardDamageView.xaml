<UserControl x:Class="FalcaPOS.AddInventory.Views.InWardDamageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
               xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:converters="clr-namespace:FalcaPOS.Common.Converters;assembly=FalcaPOS.Common"
             xmlns:local="clr-namespace:FalcaPOS.AddInventory.Views"
               xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:StringToShortDateConverter x:Key="ShortDateConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanConverter" />
        <converters:ArrayToVisibilityInverseConverter x:Key="InverseArrayToVisibility" />
        <converters:ArrayToVisibilityConverter x:Key="ArrayToVisibility" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition Height="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}}"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Grid.ColumnSpan="2"  Orientation="Horizontal">
            <DatePicker  
                    Width="150"
                    Margin="150 0 0 0"
                    materialDesign:HintAssist.Hint=" From InvoiceDate"
                    materialDesign:HintAssist.IsFloating="True"
                Text="{Binding FromDate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
            </DatePicker>

            <DatePicker  
                    Width="150"
                    Margin="50 0 0 0"
                    materialDesign:HintAssist.Hint=" To InvoiceDate"
                    materialDesign:HintAssist.IsFloating="True"
                     Text="{Binding ToDate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></DatePicker>
            <TextBox  
                    Width="150"
                    Margin="50 0 0 0"
                    materialDesign:HintAssist.Hint="InvoiceNo"
                    materialDesign:HintAssist.IsFloating="True"
                     Text="{Binding InvoiceNumber,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
            <ComboBox 
                    Width="150"
                    Margin="50 0 0  0"
                    materialDesign:HintAssist.Hint="Supplier Name"
                    materialDesign:HintAssist.IsFloating="True"
                     DisplayMemberPath="Name"
                    ItemsSource="{Binding Suppliers}"
                     SelectedValue="{Binding SupplierName}"></ComboBox>

            <StackPanel
                Margin="40 0 0 0"
                Orientation="Horizontal">

            
                <Button
                    x:Name="lblsearch"
                     Width="120"
                    Content="Search"
                    Command="{Binding SearchParams,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">

                 
                    
                </Button>
              
                <Button
                    Width="120"
                    x:Name="lblrefresh"
                   Margin="40 0 0 0"
                    Content="Reset"
                     Style="{StaticResource MaterialDesignOutlinedButton}"
                    Command="{Binding RefreshDataGrid}">
                   
                </Button>

            </StackPanel>

        </StackPanel>

        <DataGrid x:Name="inwarddamage" Grid.Row="1" Grid.ColumnSpan="2" Margin="0 20 0 170"   Visibility="{Binding DefectiveList, Converter={StaticResource ArrayToVisibility}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ScrollViewer.CanContentScroll="True" CanUserAddRows="False" IsReadOnly="True" AutoGeneratingColumn="DataGrid_AutoGeneratingColumn" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible"  ItemsSource="{Binding  DefectiveList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="120" Header="Invoice Date">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Content="{Binding InvoiceDate, Converter={StaticResource ShortDateConverter}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>

            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Style>
            </DataGrid.RowStyle>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <prism:InvokeCommandAction Command="{Binding RowDoubleClickCommand}" CommandParameter="{Binding ElementName=inwarddamage, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ProgressBar
                            Grid.Row="0"
                            Grid.Column="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            IsIndeterminate="True"
                            Visibility="{Binding IsBusy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibility}}" />


                        <materialDesign:Card Grid.Row="1" Margin="5" Visibility="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}">
                            <DataGrid   CanUserReorderColumns="False" AutoGeneratingColumn="DataGrid_AutoGeneratingColumn_1" IsReadOnly="True"  CanUserAddRows="False"  ItemsSource="{Binding DefectiveProductList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <DataGrid.Columns>

                                    <DataGridTemplateColumn Width="100" Header="Sub Category">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding ProductTypeName}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>

                                    </DataGridTemplateColumn>

                                  

                                </DataGrid.Columns>
                            </DataGrid>
                        </materialDesign:Card>



                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>

        <Label
              Grid.Row="1"
          Grid.ColumnSpan="2"
                HorizontalAlignment="Center"
               VerticalAlignment="Center"
                Content="No Records found"
                FontSize="20"
                FontStyle="Normal"
             Visibility="{Binding DefectiveList, Converter={StaticResource InverseArrayToVisibility}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
              />
    </Grid>
</UserControl>
